// This file is auto-generated by @hey-api/openapi-ts

import type { Client, Options as ClientOptions, TDataShape } from '@hey-api/client-axios'

import { client as _heyApiClient } from './client.gen'
import type {
  AppControllerCheckHealthV1Data,
  AuthControllerActivateStaffAccountSetPasswordV1Data,
  AuthControllerActivateStaffAccountSetPasswordV1Response,
  AuthControllerActivateStaffAccountV1Data,
  AuthControllerActivateStaffAccountV1Response,
  AuthControllerChangePasswordV1Data,
  AuthControllerForgotPasswordSendMailV1Data,
  AuthControllerForgotPasswordSetPasswordV1Data,
  AuthControllerForgotPasswordVerifyV1Data,
  AuthControllerGetProfileV1Data,
  AuthControllerGetProfileV1Response,
  AuthControllerLogoutV1Data,
  AuthControllerManagerSignUpV1Data,
  AuthControllerRefreshTokenV1Data,
  AuthControllerSignInV1Data,
  AuthControllerSignInV1Response,
  AuthControllerSignUpSetPasswordV1Data,
  AuthControllerSignUpSetPasswordV1Response,
  AuthControllerUpdateProfileAvatarV1Data,
  AuthControllerUpdateProfileAvatarV1Response,
  AuthControllerUpdateProfileV1Data,
  AuthControllerVerifyV1Data,
  AuthControllerVerifyV1Response,
  CommonControllerGetStaffsV1Data,
  CommonControllerGetStaffsV1Response,
  ConstructionSiteControllerGetConstructionSiteForDropdownV1Data,
  ConstructionSiteControllerGetConstructionSiteForDropdownV1Response,
  ConstructionSiteControllerGetConstructionSitesV1Data,
  ConstructionSiteControllerGetConstructionSitesV1Response,
  ConstructionSiteControllerGetConstructionSiteV1Data,
  ConstructionSiteControllerGetConstructionSiteV1Response,
  ConstructionSiteControllerGetJobsByConstructionSiteIdV1Data,
  ConstructionSiteControllerGetJobsByConstructionSiteIdV1Response,
  ConstructionSiteControllerGetOfferJobsByConstructionSiteIdV1Data,
  ConstructionSiteControllerGetOfferJobsByConstructionSiteIdV1Response,
  FileControllerGetUploadPresignedUrlV1Data,
  FileControllerGetUploadPresignedUrlV1Response,
  JobCategoryControllerGetJobCategoriesV1Data,
  JobCategoryControllerGetJobCategoriesV1Response,
  JobControllerCheckOfferEligibilityV1Data,
  JobControllerCheckOfferEligibilityV1Response,
  JobControllerCreateJobV1Data,
  JobControllerCreateJobV1Response,
  JobControllerDeleteJobV1Data,
  JobControllerGetJobDetailV1Data,
  JobControllerGetJobDetailV1Response,
  JobControllerOfferV1Data,
  JobControllerOfferV1Response,
  JobControllerSearchWorkerV1Data,
  JobControllerSearchWorkerV1Response,
  JobControllerUpdateJobV1Data,
  ManagerOrderCompanyControllerCreateOrderCompanyAchievementV1Data,
  ManagerOrderCompanyControllerCreateOrderCompanyAchievementV1Response,
  ManagerOrderCompanyControllerDeleteOrderCompanyAchievementV1Data,
  ManagerOrderCompanyControllerGetOrderCompanyAchievementsV1Data,
  ManagerOrderCompanyControllerGetOrderCompanyAchievementsV1Response,
  ManagerOrderCompanyControllerGetOrderCompanyAchievementV1Data,
  ManagerOrderCompanyControllerGetOrderCompanyAchievementV1Response,
  ManagerOrderCompanyControllerGetOrderCompanyDocumentsV1Data,
  ManagerOrderCompanyControllerGetOrderCompanyDocumentsV1Response,
  ManagerOrderCompanyControllerGetOrderCompanyJobCategoriesV1Data,
  ManagerOrderCompanyControllerGetOrderCompanyJobCategoriesV1Response,
  ManagerOrderCompanyControllerGetOrderCompanyV1Data,
  ManagerOrderCompanyControllerGetOrderCompanyV1Response,
  ManagerOrderCompanyControllerGetTabStatusesV1Data,
  ManagerOrderCompanyControllerGetTabStatusesV1Response,
  ManagerOrderCompanyControllerSendOtpV1Data,
  ManagerOrderCompanyControllerUpdateOrderCompanyAchievementV1Data,
  ManagerOrderCompanyControllerUpdateOrderCompanyDocumentsV1Data,
  ManagerOrderCompanyControllerUpdateOrderCompanyDocumentsV1Response,
  ManagerOrderCompanyControllerUpdateOrderCompanyJobCategoryV1Data,
  ManagerOrderCompanyControllerUpdateOrderCompanyJobCategoryV1Response,
  ManagerOrderCompanyControllerUpdateOrderCompanyV1Data,
  ManagerOrderCompanyControllerVerifyOtpV1Data,
  ManagerStaffControllerCreateStaffV1Data,
  ManagerStaffControllerDeleteStaffV1Data,
  ManagerStaffControllerGetStaffsV1Data,
  ManagerStaffControllerGetStaffsV1Response,
  ManagerStaffControllerGetStaffV1Data,
  ManagerStaffControllerGetStaffV1Response,
  NavitimeControllerGetAddressFromCoordV1Data,
  NavitimeControllerGetAddressFromCoordV1Response,
  NavitimeControllerGetCoordFromAddressV1Data,
  NavitimeControllerGetCoordFromAddressV1Response,
  NavitimeControllerGetMapScriptV1Data,
  NavitimeControllerGetMapScriptV1Response,
  ReviewControllerCreateReviewV1Data,
  ReviewControllerGetReviewsOfTalkRoomV1Data,
  ReviewControllerGetReviewsOfTalkRoomV1Response,
  ReviewControllerGetReviewsOfUserV1Data,
  ReviewControllerGetReviewsOfUserV1Response,
  StaffWorkerControllerGetWorkerDetailV1Data,
  StaffWorkerControllerGetWorkerDetailV1Response,
  TalkRoomControllerAcceptQuotationV1Data,
  TalkRoomControllerAddWorkDateV1Data,
  TalkRoomControllerApprovePayslipV1Data,
  TalkRoomControllerCancelAddWorkDateRequestV1Data,
  TalkRoomControllerCancelQuotationAfterWorkingV1Data,
  TalkRoomControllerCancelQuotationBeforeWorkingV1Data,
  TalkRoomControllerGetCalendarV1Data,
  TalkRoomControllerGetCalendarV1Response,
  TalkRoomControllerGetMessagesV1Data,
  TalkRoomControllerGetMessagesV1Response,
  TalkRoomControllerGetPayslipHistoryDetailV1Data,
  TalkRoomControllerGetPayslipHistoryDetailV1Response,
  TalkRoomControllerGetPayslipHistoryV1Data,
  TalkRoomControllerGetPayslipHistoryV1Response,
  TalkRoomControllerGetQoutationsV1Data,
  TalkRoomControllerGetQoutationsV1Response,
  TalkRoomControllerGetTalkRoomBySiteIdV1Data,
  TalkRoomControllerGetTalkRoomBySiteIdV1Response,
  TalkRoomControllerGetTalkRoomConversationV1Data,
  TalkRoomControllerGetTalkRoomConversationV1Response,
  TalkRoomControllerGetTalkRoomsV1Data,
  TalkRoomControllerGetTalkRoomsV1Response,
  TalkRoomControllerRejectQuotationV1Data,
  TalkRoomControllerRemoveWorkDateV1Data,
  TalkRoomControllerReturnForCorrectionV1Data,
  TalkRoomControllerSendMessageV1Data,
  TalkRoomControllerSendMessageV1Error,
  TalkRoomControllerSendMessageV1Response,
  TalkRoomControllerSubmitQuotationV1Data,
  TodoControllerCreateTodoV1Data,
  TodoControllerDeleteTodoV1Data,
  TodoControllerGetTodoDetailV1Data,
  TodoControllerGetTodoDetailV1Response,
  TodoControllerGetTodosV1Data,
  TodoControllerGetTodosV1Response,
  TodoControllerUpdateTodoV1Data,
  TodoControllerUpdateTodoV1Response,
} from './types.gen'

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>
}

export class HealthService {
  public static appControllerCheckHealthV1<ThrowOnError extends boolean = false>(
    options?: Options<AppControllerCheckHealthV1Data, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
      url: '/api/v1/health',
      ...options,
    })
  }
}

export class NavitimeService {
  public static navitimeControllerGetMapScriptV1<ThrowOnError extends boolean = false>(
    options?: Options<NavitimeControllerGetMapScriptV1Data, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<
      NavitimeControllerGetMapScriptV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/navitime/map-script',
      ...options,
    })
  }

  public static navitimeControllerGetAddressFromCoordV1<ThrowOnError extends boolean = false>(
    options: Options<NavitimeControllerGetAddressFromCoordV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<
      NavitimeControllerGetAddressFromCoordV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/navitime/address-from-coord',
      ...options,
    })
  }

  public static navitimeControllerGetCoordFromAddressV1<ThrowOnError extends boolean = false>(
    options: Options<NavitimeControllerGetCoordFromAddressV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<
      NavitimeControllerGetCoordFromAddressV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/navitime/coord-from-address',
      ...options,
    })
  }
}

export class AuthService {
  public static authControllerManagerSignUpV1<ThrowOnError extends boolean = false>(
    options: Options<AuthControllerManagerSignUpV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      url: '/api/v1/auth/manager/sign-up/send-mail',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static authControllerVerifyV1<ThrowOnError extends boolean = false>(
    options: Options<AuthControllerVerifyV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<
      AuthControllerVerifyV1Response,
      unknown,
      ThrowOnError
    >({
      url: '/api/v1/auth/manager/sign-up/verify',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static authControllerSignUpSetPasswordV1<ThrowOnError extends boolean = false>(
    options: Options<AuthControllerSignUpSetPasswordV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<
      AuthControllerSignUpSetPasswordV1Response,
      unknown,
      ThrowOnError
    >({
      url: '/api/v1/auth/manager/sign-up/set-password',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static authControllerActivateStaffAccountV1<ThrowOnError extends boolean = false>(
    options: Options<AuthControllerActivateStaffAccountV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<
      AuthControllerActivateStaffAccountV1Response,
      unknown,
      ThrowOnError
    >({
      url: '/api/v1/auth/staff/activate/verify',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static authControllerActivateStaffAccountSetPasswordV1<
    ThrowOnError extends boolean = false,
  >(options: Options<AuthControllerActivateStaffAccountSetPasswordV1Data, ThrowOnError>) {
    return (options.client ?? _heyApiClient).post<
      AuthControllerActivateStaffAccountSetPasswordV1Response,
      unknown,
      ThrowOnError
    >({
      url: '/api/v1/auth/staff/activate/set-password',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static authControllerForgotPasswordSendMailV1<ThrowOnError extends boolean = false>(
    options: Options<AuthControllerForgotPasswordSendMailV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      url: '/api/v1/auth/forgot-password/send-mail',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static authControllerForgotPasswordVerifyV1<ThrowOnError extends boolean = false>(
    options: Options<AuthControllerForgotPasswordVerifyV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      url: '/api/v1/auth/forgot-password/verify',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static authControllerForgotPasswordSetPasswordV1<ThrowOnError extends boolean = false>(
    options: Options<AuthControllerForgotPasswordSetPasswordV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      url: '/api/v1/auth/forgot-password/set-password',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static authControllerSignInV1<ThrowOnError extends boolean = false>(
    options: Options<AuthControllerSignInV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<
      AuthControllerSignInV1Response,
      unknown,
      ThrowOnError
    >({
      url: '/api/v1/auth/login',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static authControllerGetProfileV1<ThrowOnError extends boolean = false>(
    options?: Options<AuthControllerGetProfileV1Data, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<
      AuthControllerGetProfileV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/auth/profile',
      ...options,
    })
  }

  public static authControllerUpdateProfileV1<ThrowOnError extends boolean = false>(
    options: Options<AuthControllerUpdateProfileV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).patch<unknown, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/auth/profile',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static authControllerUpdateProfileAvatarV1<ThrowOnError extends boolean = false>(
    options: Options<AuthControllerUpdateProfileAvatarV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).patch<
      AuthControllerUpdateProfileAvatarV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/auth/profile/avatar',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static authControllerChangePasswordV1<ThrowOnError extends boolean = false>(
    options: Options<AuthControllerChangePasswordV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/auth/change-password',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static authControllerRefreshTokenV1<ThrowOnError extends boolean = false>(
    options: Options<AuthControllerRefreshTokenV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      url: '/api/v1/auth/refresh-token',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static authControllerLogoutV1<ThrowOnError extends boolean = false>(
    options: Options<AuthControllerLogoutV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/auth/logout',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }
}

export class FileService {
  public static fileControllerGetUploadPresignedUrlV1<ThrowOnError extends boolean = false>(
    options: Options<FileControllerGetUploadPresignedUrlV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<
      FileControllerGetUploadPresignedUrlV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/file/presigned-url',
      ...options,
    })
  }
}

export class ManagerStaffsService {
  public static managerStaffControllerGetStaffsV1<ThrowOnError extends boolean = false>(
    options?: Options<ManagerStaffControllerGetStaffsV1Data, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<
      ManagerStaffControllerGetStaffsV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/manager/staffs',
      ...options,
    })
  }

  public static managerStaffControllerCreateStaffV1<ThrowOnError extends boolean = false>(
    options: Options<ManagerStaffControllerCreateStaffV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/manager/staffs',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static managerStaffControllerDeleteStaffV1<ThrowOnError extends boolean = false>(
    options: Options<ManagerStaffControllerDeleteStaffV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).delete<unknown, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/manager/staffs/{id}',
      ...options,
    })
  }

  public static managerStaffControllerGetStaffV1<ThrowOnError extends boolean = false>(
    options: Options<ManagerStaffControllerGetStaffV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<
      ManagerStaffControllerGetStaffV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/manager/staffs/{id}',
      ...options,
    })
  }
}

export class ManagerOrderCompanyService {
  public static managerOrderCompanyControllerGetOrderCompanyV1<
    ThrowOnError extends boolean = false,
  >(options?: Options<ManagerOrderCompanyControllerGetOrderCompanyV1Data, ThrowOnError>) {
    return (options?.client ?? _heyApiClient).get<
      ManagerOrderCompanyControllerGetOrderCompanyV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/manager/order-company',
      ...options,
    })
  }

  public static managerOrderCompanyControllerUpdateOrderCompanyV1<
    ThrowOnError extends boolean = false,
  >(options: Options<ManagerOrderCompanyControllerUpdateOrderCompanyV1Data, ThrowOnError>) {
    return (options.client ?? _heyApiClient).patch<unknown, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/manager/order-company',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static managerOrderCompanyControllerGetOrderCompanyJobCategoriesV1<
    ThrowOnError extends boolean = false,
  >(
    options?: Options<
      ManagerOrderCompanyControllerGetOrderCompanyJobCategoriesV1Data,
      ThrowOnError
    >,
  ) {
    return (options?.client ?? _heyApiClient).get<
      ManagerOrderCompanyControllerGetOrderCompanyJobCategoriesV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/manager/order-company/job-categories',
      ...options,
    })
  }

  public static managerOrderCompanyControllerUpdateOrderCompanyJobCategoryV1<
    ThrowOnError extends boolean = false,
  >(
    options: Options<
      ManagerOrderCompanyControllerUpdateOrderCompanyJobCategoryV1Data,
      ThrowOnError
    >,
  ) {
    return (options.client ?? _heyApiClient).patch<
      ManagerOrderCompanyControllerUpdateOrderCompanyJobCategoryV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/manager/order-company/job-categories',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static managerOrderCompanyControllerGetOrderCompanyAchievementsV1<
    ThrowOnError extends boolean = false,
  >(
    options?: Options<ManagerOrderCompanyControllerGetOrderCompanyAchievementsV1Data, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<
      ManagerOrderCompanyControllerGetOrderCompanyAchievementsV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/manager/order-company/achievements',
      ...options,
    })
  }

  public static managerOrderCompanyControllerCreateOrderCompanyAchievementV1<
    ThrowOnError extends boolean = false,
  >(
    options: Options<
      ManagerOrderCompanyControllerCreateOrderCompanyAchievementV1Data,
      ThrowOnError
    >,
  ) {
    return (options.client ?? _heyApiClient).post<
      ManagerOrderCompanyControllerCreateOrderCompanyAchievementV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/manager/order-company/achievements',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static managerOrderCompanyControllerDeleteOrderCompanyAchievementV1<
    ThrowOnError extends boolean = false,
  >(
    options: Options<
      ManagerOrderCompanyControllerDeleteOrderCompanyAchievementV1Data,
      ThrowOnError
    >,
  ) {
    return (options.client ?? _heyApiClient).delete<unknown, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/manager/order-company/achievements/{id}',
      ...options,
    })
  }

  public static managerOrderCompanyControllerGetOrderCompanyAchievementV1<
    ThrowOnError extends boolean = false,
  >(options: Options<ManagerOrderCompanyControllerGetOrderCompanyAchievementV1Data, ThrowOnError>) {
    return (options.client ?? _heyApiClient).get<
      ManagerOrderCompanyControllerGetOrderCompanyAchievementV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/manager/order-company/achievements/{id}',
      ...options,
    })
  }

  public static managerOrderCompanyControllerUpdateOrderCompanyAchievementV1<
    ThrowOnError extends boolean = false,
  >(
    options: Options<
      ManagerOrderCompanyControllerUpdateOrderCompanyAchievementV1Data,
      ThrowOnError
    >,
  ) {
    return (options.client ?? _heyApiClient).patch<unknown, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/manager/order-company/achievements/{id}',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static managerOrderCompanyControllerSendOtpV1<ThrowOnError extends boolean = false>(
    options: Options<ManagerOrderCompanyControllerSendOtpV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/manager/order-company/verify-phone/send-otp',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static managerOrderCompanyControllerVerifyOtpV1<ThrowOnError extends boolean = false>(
    options: Options<ManagerOrderCompanyControllerVerifyOtpV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/manager/order-company/verify-phone/verify-otp',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static managerOrderCompanyControllerGetOrderCompanyDocumentsV1<
    ThrowOnError extends boolean = false,
  >(options?: Options<ManagerOrderCompanyControllerGetOrderCompanyDocumentsV1Data, ThrowOnError>) {
    return (options?.client ?? _heyApiClient).get<
      ManagerOrderCompanyControllerGetOrderCompanyDocumentsV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/manager/order-company/documents',
      ...options,
    })
  }

  public static managerOrderCompanyControllerUpdateOrderCompanyDocumentsV1<
    ThrowOnError extends boolean = false,
  >(
    options: Options<ManagerOrderCompanyControllerUpdateOrderCompanyDocumentsV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<
      ManagerOrderCompanyControllerUpdateOrderCompanyDocumentsV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/manager/order-company/documents',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static managerOrderCompanyControllerGetTabStatusesV1<ThrowOnError extends boolean = false>(
    options?: Options<ManagerOrderCompanyControllerGetTabStatusesV1Data, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<
      ManagerOrderCompanyControllerGetTabStatusesV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/manager/order-company/tab-statuses',
      ...options,
    })
  }
}

export class JobCategoryService {
  public static jobCategoryControllerGetJobCategoriesV1<ThrowOnError extends boolean = false>(
    options: Options<JobCategoryControllerGetJobCategoriesV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<
      JobCategoryControllerGetJobCategoriesV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/job-category',
      ...options,
    })
  }
}

export class CommonDropdownService {
  public static commonControllerGetStaffsV1<ThrowOnError extends boolean = false>(
    options?: Options<CommonControllerGetStaffsV1Data, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<
      CommonControllerGetStaffsV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/common/dropdown/staffs',
      ...options,
    })
  }
}

export class JobConstructionSiteService {
  public static constructionSiteControllerGetConstructionSitesV1<
    ThrowOnError extends boolean = false,
  >(options?: Options<ConstructionSiteControllerGetConstructionSitesV1Data, ThrowOnError>) {
    return (options?.client ?? _heyApiClient).get<
      ConstructionSiteControllerGetConstructionSitesV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/job/construction-site',
      ...options,
    })
  }

  public static constructionSiteControllerGetConstructionSiteForDropdownV1<
    ThrowOnError extends boolean = false,
  >(
    options?: Options<ConstructionSiteControllerGetConstructionSiteForDropdownV1Data, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<
      ConstructionSiteControllerGetConstructionSiteForDropdownV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/job/construction-site/dropdown',
      ...options,
    })
  }

  public static constructionSiteControllerGetConstructionSiteV1<
    ThrowOnError extends boolean = false,
  >(options: Options<ConstructionSiteControllerGetConstructionSiteV1Data, ThrowOnError>) {
    return (options.client ?? _heyApiClient).get<
      ConstructionSiteControllerGetConstructionSiteV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/job/construction-site/{id}',
      ...options,
    })
  }

  public static constructionSiteControllerGetJobsByConstructionSiteIdV1<
    ThrowOnError extends boolean = false,
  >(options: Options<ConstructionSiteControllerGetJobsByConstructionSiteIdV1Data, ThrowOnError>) {
    return (options.client ?? _heyApiClient).get<
      ConstructionSiteControllerGetJobsByConstructionSiteIdV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/job/construction-site/{id}/jobs',
      ...options,
    })
  }

  public static constructionSiteControllerGetOfferJobsByConstructionSiteIdV1<
    ThrowOnError extends boolean = false,
  >(
    options: Options<
      ConstructionSiteControllerGetOfferJobsByConstructionSiteIdV1Data,
      ThrowOnError
    >,
  ) {
    return (options.client ?? _heyApiClient).get<
      ConstructionSiteControllerGetOfferJobsByConstructionSiteIdV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/job/construction-site/{id}/offers',
      ...options,
    })
  }
}

export class JobsService {
  public static jobControllerCreateJobV1<ThrowOnError extends boolean = false>(
    options: Options<JobControllerCreateJobV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<
      JobControllerCreateJobV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/jobs',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static jobControllerDeleteJobV1<ThrowOnError extends boolean = false>(
    options: Options<JobControllerDeleteJobV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).delete<unknown, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/jobs/{id}',
      ...options,
    })
  }

  public static jobControllerGetJobDetailV1<ThrowOnError extends boolean = false>(
    options: Options<JobControllerGetJobDetailV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<
      JobControllerGetJobDetailV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/jobs/{id}',
      ...options,
    })
  }

  public static jobControllerUpdateJobV1<ThrowOnError extends boolean = false>(
    options: Options<JobControllerUpdateJobV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).patch<unknown, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/jobs/{id}',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static jobControllerCheckOfferEligibilityV1<ThrowOnError extends boolean = false>(
    options?: Options<JobControllerCheckOfferEligibilityV1Data, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<
      JobControllerCheckOfferEligibilityV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/jobs/check-offer-eligibility',
      ...options,
    })
  }

  public static jobControllerSearchWorkerV1<ThrowOnError extends boolean = false>(
    options: Options<JobControllerSearchWorkerV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<
      JobControllerSearchWorkerV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/jobs/search-worker',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static jobControllerOfferV1<ThrowOnError extends boolean = false>(
    options: Options<JobControllerOfferV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<
      JobControllerOfferV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/jobs/start-chat',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }
}

export class StaffWorkerService {
  public static staffWorkerControllerGetWorkerDetailV1<ThrowOnError extends boolean = false>(
    options: Options<StaffWorkerControllerGetWorkerDetailV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<
      StaffWorkerControllerGetWorkerDetailV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/staff/worker/{id}',
      ...options,
    })
  }
}

export class TalkRoomsService {
  /**
   * Get talk rooms list
   */
  public static talkRoomControllerGetTalkRoomsV1<ThrowOnError extends boolean = false>(
    options?: Options<TalkRoomControllerGetTalkRoomsV1Data, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<
      TalkRoomControllerGetTalkRoomsV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/talk-rooms',
      ...options,
    })
  }

  public static talkRoomControllerGetCalendarV1<ThrowOnError extends boolean = false>(
    options: Options<TalkRoomControllerGetCalendarV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<
      TalkRoomControllerGetCalendarV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/talk-rooms/calendar',
      ...options,
    })
  }

  public static talkRoomControllerGetTalkRoomBySiteIdV1<ThrowOnError extends boolean = false>(
    options: Options<TalkRoomControllerGetTalkRoomBySiteIdV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<
      TalkRoomControllerGetTalkRoomBySiteIdV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/talk-rooms/{siteId}/list-talk-rooms',
      ...options,
    })
  }

  /**
   * Get talk room conversation
   */
  public static talkRoomControllerGetTalkRoomConversationV1<ThrowOnError extends boolean = false>(
    options: Options<TalkRoomControllerGetTalkRoomConversationV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<
      TalkRoomControllerGetTalkRoomConversationV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/talk-rooms/{id}/conversation',
      ...options,
    })
  }

  /**
   * Get talk room messages
   */
  public static talkRoomControllerGetMessagesV1<ThrowOnError extends boolean = false>(
    options: Options<TalkRoomControllerGetMessagesV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<
      TalkRoomControllerGetMessagesV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/talk-rooms/{id}/messages',
      ...options,
    })
  }

  public static talkRoomControllerSendMessageV1<ThrowOnError extends boolean = false>(
    options: Options<TalkRoomControllerSendMessageV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<
      TalkRoomControllerSendMessageV1Response,
      TalkRoomControllerSendMessageV1Error,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/talk-rooms/{id}/messages',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static talkRoomControllerGetQoutationsV1<ThrowOnError extends boolean = false>(
    options: Options<TalkRoomControllerGetQoutationsV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<
      TalkRoomControllerGetQoutationsV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/talk-rooms/{id}/qoutations',
      ...options,
    })
  }

  public static talkRoomControllerGetPayslipHistoryV1<ThrowOnError extends boolean = false>(
    options: Options<TalkRoomControllerGetPayslipHistoryV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<
      TalkRoomControllerGetPayslipHistoryV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/talk-rooms/{id}/payslip-history',
      ...options,
    })
  }

  public static talkRoomControllerGetPayslipHistoryDetailV1<ThrowOnError extends boolean = false>(
    options: Options<TalkRoomControllerGetPayslipHistoryDetailV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<
      TalkRoomControllerGetPayslipHistoryDetailV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/talk-rooms/{id}/payslip-history/{payslipId}',
      ...options,
    })
  }

  public static talkRoomControllerSubmitQuotationV1<ThrowOnError extends boolean = false>(
    options: Options<TalkRoomControllerSubmitQuotationV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/talk-rooms/{id}/submit-quotation',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static talkRoomControllerAcceptQuotationV1<ThrowOnError extends boolean = false>(
    options: Options<TalkRoomControllerAcceptQuotationV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/talk-rooms/{id}/accept-quotation',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static talkRoomControllerRejectQuotationV1<ThrowOnError extends boolean = false>(
    options: Options<TalkRoomControllerRejectQuotationV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/talk-rooms/{id}/reject-quotation',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static talkRoomControllerCancelQuotationBeforeWorkingV1<
    ThrowOnError extends boolean = false,
  >(options: Options<TalkRoomControllerCancelQuotationBeforeWorkingV1Data, ThrowOnError>) {
    return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/talk-rooms/{id}/cancel-quotation-before-working',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static talkRoomControllerCancelQuotationAfterWorkingV1<
    ThrowOnError extends boolean = false,
  >(options: Options<TalkRoomControllerCancelQuotationAfterWorkingV1Data, ThrowOnError>) {
    return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/talk-rooms/{id}/cancel-quotation-after-working',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static talkRoomControllerRemoveWorkDateV1<ThrowOnError extends boolean = false>(
    options: Options<TalkRoomControllerRemoveWorkDateV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/talk-rooms/{id}/remove-work-date',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static talkRoomControllerAddWorkDateV1<ThrowOnError extends boolean = false>(
    options: Options<TalkRoomControllerAddWorkDateV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/talk-rooms/{id}/add-work-date',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static talkRoomControllerReturnForCorrectionV1<ThrowOnError extends boolean = false>(
    options: Options<TalkRoomControllerReturnForCorrectionV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/talk-rooms/{id}/return-for-correction',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static talkRoomControllerApprovePayslipV1<ThrowOnError extends boolean = false>(
    options: Options<TalkRoomControllerApprovePayslipV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/talk-rooms/{id}/approve-payslip',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static talkRoomControllerCancelAddWorkDateRequestV1<ThrowOnError extends boolean = false>(
    options: Options<TalkRoomControllerCancelAddWorkDateRequestV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/talk-rooms/{id}/cancel-add-work-date-request',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }
}

export class TodosService {
  public static todoControllerGetTodosV1<ThrowOnError extends boolean = false>(
    options?: Options<TodoControllerGetTodosV1Data, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<
      TodoControllerGetTodosV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/todos',
      ...options,
    })
  }

  public static todoControllerCreateTodoV1<ThrowOnError extends boolean = false>(
    options: Options<TodoControllerCreateTodoV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/todos',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static todoControllerDeleteTodoV1<ThrowOnError extends boolean = false>(
    options: Options<TodoControllerDeleteTodoV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).delete<unknown, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/todos/{id}',
      ...options,
    })
  }

  public static todoControllerGetTodoDetailV1<ThrowOnError extends boolean = false>(
    options: Options<TodoControllerGetTodoDetailV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<
      TodoControllerGetTodoDetailV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/todos/{id}',
      ...options,
    })
  }

  public static todoControllerUpdateTodoV1<ThrowOnError extends boolean = false>(
    options: Options<TodoControllerUpdateTodoV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).patch<
      TodoControllerUpdateTodoV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/todos/{id}',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }
}

export class ReviewsService {
  public static reviewControllerGetReviewsOfTalkRoomV1<ThrowOnError extends boolean = false>(
    options: Options<ReviewControllerGetReviewsOfTalkRoomV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<
      ReviewControllerGetReviewsOfTalkRoomV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/reviews/{talkRoomId}',
      ...options,
    })
  }

  public static reviewControllerCreateReviewV1<ThrowOnError extends boolean = false>(
    options: Options<ReviewControllerCreateReviewV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/reviews/{talkRoomId}',
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options?.headers,
      },
    })
  }

  public static reviewControllerGetReviewsOfUserV1<ThrowOnError extends boolean = false>(
    options: Options<ReviewControllerGetReviewsOfUserV1Data, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<
      ReviewControllerGetReviewsOfUserV1Response,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: 'bearer',
          type: 'http',
        },
      ],
      url: '/api/v1/reviews/user/{id}',
      ...options,
    })
  }
}
