// This file is auto-generated by @hey-api/openapi-ts

export type NavitimeRes = {
  script: string
  cid: string
}

export type GetAddressRes = {
  postalCode: string
  city: string
  prefecture: string
  houseNumber: string
}

export type GetLatLongRes = {
  lat: number
  lon: number
}

export type ManagerSignUpDto = {
  email: string
}

export type ManagerSignUpVerifyDto = {
  token: string
}

export type ManagerSignUpVerifyTokenPayload = {
  email: string
  tokenType: 'sign-up' | 'password-reset' | 'activate-staff-account'
  userType: 'manager' | 'worker' | 'staff' | 'sub-worker' | 'operator'
  hashToken: string
}

export type ManagerSignUpSetPasswordDto = {
  token: string
  email: string
  password: string
}

export type OrderCompanyRole = 'MANAGER' | 'STAFF'

export const OrderCompanyRole = {
  MANAGER: 'MANAGER',
  STAFF: 'STAFF',
} as const

export type OrderCompanyUserStatus = 'INVITING' | 'ACTIVE' | 'INACTIVE' | 'SUSPENDED' | 'DELETED'

export const OrderCompanyUserStatus = {
  INVITING: 'INVITING',
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  SUSPENDED: 'SUSPENDED',
  DELETED: 'DELETED',
} as const

export type FileOwnerType = 'WORKER' | 'ORDER_COMPANY' | 'OPERATOR'

export const FileOwnerType = {
  WORKER: 'WORKER',
  ORDER_COMPANY: 'ORDER_COMPANY',
  OPERATOR: 'OPERATOR',
} as const

export type FilePrivacy = 'PUBLIC' | 'PRIVATE'

export const FilePrivacy = {
  PUBLIC: 'PUBLIC',
  PRIVATE: 'PRIVATE',
} as const

export type FileEntity = {
  ownerType: FileOwnerType
  privacy: FilePrivacy
  deletedAt: string | null
  s3Key: string
  createdBy: string
  id: string
  originalName: string
  mimeType: string
  createdAt: string
  updatedAt: string | null
  ownerId: string
  size: number | null
  url: string
}

export type CertificateType =
  | 'NoCertificate'
  | 'FirstClassArchitect'
  | 'SecondClassArchitect'
  | 'WoodenConstructionArchitect'
  | 'FirstClassConstructionManager'
  | 'SecondClassConstructionManager'
  | 'FirstClassPlumbingManager'
  | 'SecondClassPlumbingManager'
  | 'FirstClassElectricManager'
  | 'SecondClassElectricManager'
  | 'FirstClassCivilEngineeringManager'
  | 'SecondClassCivilEngineeringManager'
  | 'FirstClassConstructionAccounting'
  | 'SecondClassConstructionAccounting'
  | 'FirstClassElectrician'
  | 'SecondClassElectrician'
  | 'ElectricChiefTechnician'
  | 'FirefightingEquipmentTechnician'
  | 'WaterSupplyTechnician'
  | 'DrainageEquipmentTechnician'
  | 'AirConditioningTechnician'
  | 'HealthSafetyOfficer'
  | 'SafetySupervisorTrainingCompleted'
  | 'AsbestosBuildingMaterialsInvestigator'
  | 'AsbestosWorkManager'
  | 'ScaffoldWorkManager'
  | 'FormworkSupportWorkManager'
  | 'VehicleConstructionMachineOperator'
  | 'CraneOperatorTrainingCompleted'
  | 'SmallMobileCraneOperatorTrainingCompleted'
  | 'HighAltitudeWorkVehicleOperatorTrainingCompleted'
  | 'ForkliftOperatorTrainingCompleted'
  | 'Other'

export const CertificateType = {
  NO_CERTIFICATE: 'NoCertificate',
  FIRST_CLASS_ARCHITECT: 'FirstClassArchitect',
  SECOND_CLASS_ARCHITECT: 'SecondClassArchitect',
  WOODEN_CONSTRUCTION_ARCHITECT: 'WoodenConstructionArchitect',
  FIRST_CLASS_CONSTRUCTION_MANAGER: 'FirstClassConstructionManager',
  SECOND_CLASS_CONSTRUCTION_MANAGER: 'SecondClassConstructionManager',
  FIRST_CLASS_PLUMBING_MANAGER: 'FirstClassPlumbingManager',
  SECOND_CLASS_PLUMBING_MANAGER: 'SecondClassPlumbingManager',
  FIRST_CLASS_ELECTRIC_MANAGER: 'FirstClassElectricManager',
  SECOND_CLASS_ELECTRIC_MANAGER: 'SecondClassElectricManager',
  FIRST_CLASS_CIVIL_ENGINEERING_MANAGER: 'FirstClassCivilEngineeringManager',
  SECOND_CLASS_CIVIL_ENGINEERING_MANAGER: 'SecondClassCivilEngineeringManager',
  FIRST_CLASS_CONSTRUCTION_ACCOUNTING: 'FirstClassConstructionAccounting',
  SECOND_CLASS_CONSTRUCTION_ACCOUNTING: 'SecondClassConstructionAccounting',
  FIRST_CLASS_ELECTRICIAN: 'FirstClassElectrician',
  SECOND_CLASS_ELECTRICIAN: 'SecondClassElectrician',
  ELECTRIC_CHIEF_TECHNICIAN: 'ElectricChiefTechnician',
  FIREFIGHTING_EQUIPMENT_TECHNICIAN: 'FirefightingEquipmentTechnician',
  WATER_SUPPLY_TECHNICIAN: 'WaterSupplyTechnician',
  DRAINAGE_EQUIPMENT_TECHNICIAN: 'DrainageEquipmentTechnician',
  AIR_CONDITIONING_TECHNICIAN: 'AirConditioningTechnician',
  HEALTH_SAFETY_OFFICER: 'HealthSafetyOfficer',
  SAFETY_SUPERVISOR_TRAINING_COMPLETED: 'SafetySupervisorTrainingCompleted',
  ASBESTOS_BUILDING_MATERIALS_INVESTIGATOR: 'AsbestosBuildingMaterialsInvestigator',
  ASBESTOS_WORK_MANAGER: 'AsbestosWorkManager',
  SCAFFOLD_WORK_MANAGER: 'ScaffoldWorkManager',
  FORMWORK_SUPPORT_WORK_MANAGER: 'FormworkSupportWorkManager',
  VEHICLE_CONSTRUCTION_MACHINE_OPERATOR: 'VehicleConstructionMachineOperator',
  CRANE_OPERATOR_TRAINING_COMPLETED: 'CraneOperatorTrainingCompleted',
  SMALL_MOBILE_CRANE_OPERATOR_TRAINING_COMPLETED: 'SmallMobileCraneOperatorTrainingCompleted',
  HIGH_ALTITUDE_WORK_VEHICLE_OPERATOR_TRAINING_COMPLETED:
    'HighAltitudeWorkVehicleOperatorTrainingCompleted',
  FORKLIFT_OPERATOR_TRAINING_COMPLETED: 'ForkliftOperatorTrainingCompleted',
  OTHER: 'Other',
} as const

export type LegalPersonality = 'PERSONAL' | 'COMPANY'

export const LegalPersonality = {
  PERSONAL: 'PERSONAL',
  COMPANY: 'COMPANY',
} as const

export type OrderCompanyCapital =
  | 'NotProvided'
  | 'Under1Million'
  | 'From1To2_99Million'
  | 'From3To9_99Million'
  | 'From10To49_99Million'
  | 'From50To99_99Million'
  | 'Over100Million'

export const OrderCompanyCapital = {
  NOT_PROVIDED: 'NotProvided',
  UNDER1_MILLION: 'Under1Million',
  FROM1_TO2_99_MILLION: 'From1To2_99Million',
  FROM3_TO9_99_MILLION: 'From3To9_99Million',
  FROM10_TO49_99_MILLION: 'From10To49_99Million',
  FROM50_TO99_99_MILLION: 'From50To99_99Million',
  OVER100_MILLION: 'Over100Million',
} as const

export type DocumentVerifyStatus = 'INCOMPLETE' | 'UNVERIFIED' | 'VERIFIED' | 'REJECTED'

export const DocumentVerifyStatus = {
  INCOMPLETE: 'INCOMPLETE',
  UNVERIFIED: 'UNVERIFIED',
  VERIFIED: 'VERIFIED',
  REJECTED: 'REJECTED',
} as const

export type CategoryType = 'WORKER' | 'ORDER_COMPANY'

export const CategoryType = {
  WORKER: 'WORKER',
  ORDER_COMPANY: 'ORDER_COMPANY',
} as const

export type JobCategoryEntity = {
  type: CategoryType
  id: string
  createdAt: string
  updatedAt: string | null
  deletedAt: string | null
  name: string
  parentId: string | null
  level: number
  parent: JobCategoryEntity | null
}

export type OrderCompanyJobCategoryEntity = {
  id: string
  createdAt: string
  updatedAt: string | null
  deletedAt: string | null
  orderCompanyId: string
  jobCategoryId: string
  jobCategory: JobCategoryEntity
}

export type OrderCompanyEntity = {
  legalPersonality: LegalPersonality | null
  capital: OrderCompanyCapital | null
  documentVerifyStatus: DocumentVerifyStatus
  id: string
  name: string
  furiganaName: string | null
  representativeName: string | null
  representativeFuriganaName: string | null
  representativePhone: string | null
  introduction: string | null
  postalCode: string | null
  province: string | null
  municipality: string | null
  address: string | null
  fax: string | null
  email: string | null
  avatarId: string | null
  isPhoneVerified: boolean
  personInChargeName: string | null
  personInChargeFuriganaName: string | null
  personInChargePhone: string | null
  registrationNumber: string | null
  establishedAt: string | null
  telephoneNumber: string | null
  website: string | null
  representativePosition: string | null
  createdAt: string
  updatedAt: string | null
  deletedAt: string | null
  avatar: FileEntity | null
  mapLink: string | null
  jobCategories: Array<OrderCompanyJobCategoryEntity>
}

export type AiTaskStatus = 'PENDING' | 'COMPLETED'

export const AiTaskStatus = {
  PENDING: 'PENDING',
  COMPLETED: 'COMPLETED',
} as const

export type AiTaskUserType = 'WORKER' | 'ORDER_COMPANY'

export const AiTaskUserType = {
  WORKER: 'WORKER',
  ORDER_COMPANY: 'ORDER_COMPANY',
} as const

export type AiTaskEntity = {
  status: AiTaskStatus
  userType: AiTaskUserType
  id: string
  createdAt: string
  updatedAt: string | null
  deletedAt: string | null
  workerId: string | null
  orderCompanyUserId: string | null
  retryAttempt: number
}

export type UserReviewStatOptimizedEntity = {
  communicationReviewCount: number
  reliabilityReviewCount: number
  skillReviewCount: number
  negativeReviewCount: number
  orderCompanyUserId?: string | null
  workerId?: string | null
}

export type OrderCompanyUserEntity = {
  role: OrderCompanyRole
  status: OrderCompanyUserStatus
  lastOnlineAt: string | null
  birthday: string | null
  email: string
  id: string
  password: string | null
  orderCompanyId: string
  orderCompany: OrderCompanyEntity
  registeredAt: string | null
  name: string | null
  nickname: string | null
  furiganaName: string | null
  postalCode: string | null
  prefecture: string | null
  municipality: string | null
  address: string | null
  phone: string | null
  introduction: string | null
  inventoryId: string | null
  avatarId: string | null
  avatar?: FileEntity | null
  documents?: Array<OrderCompanyUserDocumentEntity>
  aiTask?: AiTaskEntity | null
  reviewStat?: UserReviewStatOptimizedEntity | null
  createdAt: string
  updatedAt: string | null
  deletedAt: string | null
}

export type OrderCompanyUserDocumentFileEntity = {
  id: string
  createdAt: string
  updatedAt: string | null
  deletedAt: string | null
  orderCompanyUserDocumentId: string
  orderCompanyUserDocument: OrderCompanyUserDocumentEntity
  fileId: string
  file: FileEntity
}

export type OrderCompanyUserDocumentEntity = {
  certificateType: CertificateType | null
  id: string
  createdAt: string
  updatedAt: string | null
  deletedAt: string | null
  orderCompanyUserId: string
  orderCompanyUser: OrderCompanyUserEntity
  certificateOtherName: string | null
  files: Array<OrderCompanyUserDocumentFileEntity>
}

export type OrderCompanyUserDto = {
  role: OrderCompanyRole
  status: OrderCompanyUserStatus
  id: string
  email: string
  orderCompanyId: string
  createdAt: string
  updatedAt: string | null
  name: string | null
  nickname: string | null
  furiganaName: string | null
  registeredAt: string | null
  phone: string | null
  introduction: string | null
  avatarId: string | null
  postalCode: string | null
  prefecture: string | null
  municipality: string | null
  address: string | null
  avatar?: FileEntity | null
  documents?: Array<OrderCompanyUserDocumentEntity>
  aiTask?: AiTaskEntity | null
  reviewStat?: UserReviewStatOptimizedEntity | null
}

export type OrderCompanyUserSignInRes = {
  accessToken: string
  refreshToken: string
  user: OrderCompanyUserDto
}

export type ActivateStaffAccountVerifyDto = {
  token: string
}

export type ActivateStaffAccountVerifyRes = {
  user: OrderCompanyUserDto
  hashToken: string
  isAccountExisted: boolean
}

export type ActivateStaffAccountSetPasswordDto = {
  token: string
  password: string
  isReuseAccount?: boolean
}

export type ForgotPasswordSendMailDto = {
  email: string
}

export type ForgotPasswordVerifyDto = {
  token: string
}

export type ForgotPasswordSetPasswordDto = {
  token: string
  password: string
}

export type ManagerSignInDto = {
  email: string
  password: string
}

export type UpdateFileFieldDto = {
  key: string
  isPublic: boolean
  originalName: string
  size?: number
}

export type UpdateStaffProfileDocumentDto = {
  certificateType: CertificateType
  /**
   * Required when certificateType is Other
   */
  certificateOtherName?: string
  id?: string
  files?: Array<UpdateFileFieldDto>
}

export type UpdateStaffProfileDto = {
  nickname: string
  name: string
  furiganaName?: string
  phone?: string
  postalCode?: string
  prefecture?: string
  municipality?: string
  address?: string
  introduction?: string
  avatar?: UpdateFileFieldDto
  documents?: Array<UpdateStaffProfileDocumentDto>
}

export type UpdateStaffProfileAvatarDto = {
  key: string
  originalName: string
  size?: number
}

export type UpdateAvatarRes = {
  url: string
  isAvatarProcessing: boolean
  id: string
}

export type ChangePasswordDto = {
  oldPassword: string
  newPassword: string
}

export type RefreshTokenDto = {
  refreshToken: string
  accessToken: string
}

export type LogoutDto = {
  refreshToken: string
}

export type FileExtension =
  | 'jpg'
  | 'png'
  | 'jpeg'
  | 'gif'
  | 'svg'
  | 'webp'
  | 'mp4'
  | 'mp3'
  | 'pdf'
  | 'doc'
  | 'docx'
  | 'xls'
  | 'xlsx'
  | 'ppt'
  | 'pptx'
  | 'txt'
  | 'csv'
  | 'json'
  | 'xml'
  | 'heic'
  | 'heif'

export const FileExtension = {
  JPG: 'jpg',
  PNG: 'png',
  JPEG: 'jpeg',
  GIF: 'gif',
  SVG: 'svg',
  WEBP: 'webp',
  MP4: 'mp4',
  MP3: 'mp3',
  PDF: 'pdf',
  DOC: 'doc',
  DOCX: 'docx',
  XLS: 'xls',
  XLSX: 'xlsx',
  PPT: 'ppt',
  PPTX: 'pptx',
  TXT: 'txt',
  CSV: 'csv',
  JSON: 'json',
  XML: 'xml',
  HEIC: 'heic',
  HEIF: 'heif',
} as const

export type GetUploadPresignedUrlResDto = {
  url: string
  key: string
  isPublic: boolean
  viewUrl: string
}

export type ManagerStaffCreateDto = {
  email: string
}

export type ManagerStaffGetListResponseDto = {
  items: Array<OrderCompanyUserDto>
  totalItems: number
}

export type UpdateOrderCompanyDto = {
  /**
   * Company avatar/logo
   */
  avatar?: UpdateFileFieldDto
  /**
   * Company name
   */
  name?: string
  /**
   * Company furigana name
   */
  furiganaName?: string
  /**
   * Legal personality of the company
   */
  legalPersonality: 'PERSONAL' | 'COMPANY'
  /**
   * Representative name
   */
  representativeName?: string
  /**
   * Representative furigana name
   */
  representativeFuriganaName?: string
  /**
   * Representative position in company
   */
  representativePosition?: string
  /**
   * Representative phone number
   */
  representativePhone?: string
  /**
   * Person in charge name
   */
  personInChargeName?: string
  /**
   * Person in charge furigana name
   */
  personInChargeFuriganaName?: string
  /**
   * Company capital options
   */
  capital?: {
    [key: string]: unknown
  }
  /**
   * Company registration number
   */
  registrationNumber?: string
  /**
   * Company establishment date
   */
  establishedAt?: string
  /**
   * Company introduction
   */
  introduction?: string
  /**
   * Postal code
   */
  postalCode?: string
  /**
   * Province/Prefecture
   */
  province?: string
  /**
   * Municipality/City
   */
  municipality?: string
  /**
   * Street address
   */
  address?: string
  /**
   * Company email address
   */
  email?: string
  /**
   * Company fax number
   */
  fax?: string
  /**
   * Company map link
   */
  mapLink?: string
  /**
   * Company telephone number
   */
  telephoneNumber?: string
  /**
   * Company website
   */
  website?: string
}

export type GetOrderCompanyResponseDto = {
  legalPersonality: LegalPersonality | null
  capital: OrderCompanyCapital | null
  documentVerifyStatus: DocumentVerifyStatus
  id: string
  name: string
  furiganaName: string | null
  representativeName: string | null
  representativeFuriganaName: string | null
  representativePhone: string | null
  introduction: string | null
  postalCode: string | null
  province: string | null
  municipality: string | null
  address: string | null
  fax: string | null
  email: string | null
  avatarId: string | null
  isPhoneVerified: boolean
  personInChargeName: string | null
  personInChargeFuriganaName: string | null
  personInChargePhone: string | null
  registrationNumber: string | null
  establishedAt: string | null
  telephoneNumber: string | null
  website: string | null
  representativePosition: string | null
  createdAt: string
  updatedAt: string | null
  avatar: FileEntity | null
  mapLink: string | null
  jobCategories: Array<OrderCompanyJobCategoryEntity>
}

export type JobCategoryDto = {
  children: Array<JobCategoryDto>
  id: string
  name: string
  level: number
  parentId: string | null
  createdAt: string
}

export type UpdateOrderCompanyJobCategoryDto = {
  /**
   * Job category ids
   */
  jobCategoryIds?: Array<string>
}

export type OrderCompanyAchievementImageEntity = {
  id: string
  createdAt: string
  updatedAt: string | null
  deletedAt: string | null
  orderCompanyAchievementId: string
  fileId: string
  file: FileEntity
}

export type OrderCompanyAchievementResDto = {
  id: string
  createdAt: string
  updatedAt: string | null
  title: string
  description: string | null
  images: Array<OrderCompanyAchievementImageEntity>
  orderCompanyId: string
}

export type UpdateOrderCompanyAchievementDto = {
  /**
   * Achievement title
   */
  title?: string
  /**
   * Achievement description
   */
  description?: string
  /**
   * Achievement images
   */
  images?: Array<UpdateFileFieldDto>
}

export type CreateOrderCompanyAchievementDto = {
  /**
   * Achievement title
   */
  title: string
  /**
   * Achievement description
   */
  description: string
  /**
   * Achievement images
   */
  images: Array<UpdateFileFieldDto>
}

export type VerifyPhoneNumberSendOtpDto = {
  /**
   * Phone number
   */
  phoneNumber: string
}

export type VerifyPhoneNumberVerifyOtpDto = {
  /**
   * Phone number
   */
  phoneNumber: string
  /**
   * OTP
   */
  otp: string
}

export type UpdateOrderCompanyDocumentsDto = {
  /**
   * Document type
   */
  type:
    | 'DRIVING_LICENSE'
    | 'MY_NUMBER_CARD'
    | 'PASSPORT'
    | 'HEALTH_INSURANCE_RESIDENT_CARD'
    | 'RESIDENCE_CARD'
    | 'BASIC_RESIDENCE_CARD'
    | 'PACKAGE_A'
    | 'PACKAGE_B'
    | 'PACKAGE_C'
  /**
   * Additional document type
   */
  additionalType?:
    | 'DRIVING_LICENSE'
    | 'MY_NUMBER_CARD'
    | 'PASSPORT'
    | 'HEALTH_INSURANCE_RESIDENT_CARD'
    | 'RESIDENCE_CARD'
    | 'BASIC_RESIDENCE_CARD'
    | 'PACKAGE_A'
    | 'PACKAGE_B'
    | 'PACKAGE_C'
  /**
   * Main documents
   */
  mainFiles?: Array<UpdateFileFieldDto>
  /**
   * Additional documents
   */
  additionalFiles?: Array<UpdateFileFieldDto>
}

export type OrderCompanyDocumentFileType = 'MAIN' | 'ADDITIONAL'

export const OrderCompanyDocumentFileType = {
  MAIN: 'MAIN',
  ADDITIONAL: 'ADDITIONAL',
} as const

export type OrderCompanyDocumentFileDto = {
  type: OrderCompanyDocumentFileType
  id: string
  createdAt: string
  updatedAt: string | null
  orderCompanyDocumentId: string
  fileId: string
  file: FileEntity
}

export type GetOrderCompanyDocumentsResDto = {
  /**
   * Legal personality
   */
  legalPersonality?: 'PERSONAL' | 'COMPANY'
  /**
   * Document type
   */
  type?:
    | 'DRIVING_LICENSE'
    | 'MY_NUMBER_CARD'
    | 'PASSPORT'
    | 'HEALTH_INSURANCE_RESIDENT_CARD'
    | 'RESIDENCE_CARD'
    | 'BASIC_RESIDENCE_CARD'
    | 'PACKAGE_A'
    | 'PACKAGE_B'
    | 'PACKAGE_C'
  /**
   * Additional document type
   */
  additionalType?:
    | 'DRIVING_LICENSE'
    | 'MY_NUMBER_CARD'
    | 'PASSPORT'
    | 'HEALTH_INSURANCE_RESIDENT_CARD'
    | 'RESIDENCE_CARD'
    | 'BASIC_RESIDENCE_CARD'
    | 'PACKAGE_A'
    | 'PACKAGE_B'
    | 'PACKAGE_C'
  /**
   * Additional files
   */
  additionalFiles?: Array<OrderCompanyDocumentFileDto>
  /**
   * Main files
   */
  mainFiles?: Array<OrderCompanyDocumentFileDto>
  /**
   * Reject reasons
   */
  rejectReasons?: Array<string>
  /**
   * Comment
   */
  comment?: string | null
}

export type OrderCompanyProfileTabStatus = 'INCOMPLETE' | 'UNVERIFIED' | 'COMPLETED'

export const OrderCompanyProfileTabStatus = {
  INCOMPLETE: 'INCOMPLETE',
  UNVERIFIED: 'UNVERIFIED',
  COMPLETED: 'COMPLETED',
} as const

export type GetOrderCompanyStatusesResDto = {
  basicInfo: OrderCompanyProfileTabStatus
  document: DocumentVerifyStatus
  achievement: OrderCompanyProfileTabStatus
  jobCategory: OrderCompanyProfileTabStatus
}

export type JobCategoryResDto = {
  categories: Array<JobCategoryDto>
}

export type StaffDropdownDto = {
  id: string
  name: string | null
  email: string
  avatar?: FileEntity | null
  nickname: string | null
}

export type ConstructionSiteStatus = 'WAITING_FOR_WORKER' | 'OFFERING' | 'COMPLETED'

export const ConstructionSiteStatus = {
  WAITING_FOR_WORKER: 'WAITING_FOR_WORKER',
  OFFERING: 'OFFERING',
  COMPLETED: 'COMPLETED',
} as const

export type ConstructionSiteDto = {
  status: ConstructionSiteStatus
  jobCategories: Array<JobCategoryEntity>
  id: string
  name: string
  orderCompanyId: string
  orderCompany: OrderCompanyEntity
  municipality: string | null
  createdBy: string
  province: string
  address: string | null
  latitude: number | null
  longitude: number | null
  order: number
  createdAt: string
  updatedAt: string | null
  deletedAt: string | null
  createdByUser: OrderCompanyUserEntity
}

export type GetConstructionSitesResDto = {
  items: Array<ConstructionSiteDto>
  totalItems: number
}

export type ConstructionSiteForDropdownDto = {
  id: string
  name: string
  province: string
  municipality: string | null
  address: string | null
  latitude: number | null
  longitude: number | null
}

export type WorkerTransportation = 'PRIVATE_CAR' | 'TRAIN_BUS' | 'BICYCLE'

export const WorkerTransportation = {
  PRIVATE_CAR: 'PRIVATE_CAR',
  TRAIN_BUS: 'TRAIN_BUS',
  BICYCLE: 'BICYCLE',
} as const

export type JobWorkerAmount = 'ONE' | 'TWO' | 'THREE_TO_FIVE' | 'ABOVE_FIVE'

export const JobWorkerAmount = {
  ONE: 'ONE',
  TWO: 'TWO',
  THREE_TO_FIVE: 'THREE_TO_FIVE',
  ABOVE_FIVE: 'ABOVE_FIVE',
} as const

export type WorkShift = 'DAY' | 'NIGHT'

export const WorkShift = {
  DAY: 'DAY',
  NIGHT: 'NIGHT',
} as const

export type YearExperience =
  | 'LESS_THAN_1_YEAR'
  | 'MORE_THAN_1_YEAR'
  | 'MORE_THAN_3_YEARS'
  | 'MORE_THAN_10_YEARS'

export const YearExperience = {
  LESS_THAN_1_YEAR: 'LESS_THAN_1_YEAR',
  MORE_THAN_1_YEAR: 'MORE_THAN_1_YEAR',
  MORE_THAN_3_YEARS: 'MORE_THAN_3_YEARS',
  MORE_THAN_10_YEARS: 'MORE_THAN_10_YEARS',
} as const

export type JobAgeRequirement = 'UNSPECIFIED' | 'UP_TO_29' | 'FROM_30_TO_59' | 'ABOVE_60'

export const JobAgeRequirement = {
  UNSPECIFIED: 'UNSPECIFIED',
  UP_TO_29: 'UP_TO_29',
  FROM_30_TO_59: 'FROM_30_TO_59',
  ABOVE_60: 'ABOVE_60',
} as const

export type JobReviewRequirement = 'ABOVE_3' | 'ABOVE_5'

export const JobReviewRequirement = {
  ABOVE_3: 'ABOVE_3',
  ABOVE_5: 'ABOVE_5',
} as const

export type JobWorkerCertification =
  | 'IDENTITY_VERIFIED'
  | 'SOCIAL_INSURANCE'
  | 'ACCIDENT_INSURANCE'
  | 'INVOICE_REGISTERED'
  | 'QUICK_RESPONSE'

export const JobWorkerCertification = {
  IDENTITY_VERIFIED: 'IDENTITY_VERIFIED',
  SOCIAL_INSURANCE: 'SOCIAL_INSURANCE',
  ACCIDENT_INSURANCE: 'ACCIDENT_INSURANCE',
  INVOICE_REGISTERED: 'INVOICE_REGISTERED',
  QUICK_RESPONSE: 'QUICK_RESPONSE',
} as const

export type ConstructionSiteEntity = {
  status: ConstructionSiteStatus
  id: string
  name: string
  orderCompanyId: string
  orderCompany: OrderCompanyEntity
  municipality: string | null
  createdBy: string
  province: string
  address: string | null
  latitude: number | null
  longitude: number | null
  order: number
  createdAt: string
  updatedAt: string | null
  deletedAt: string | null
  createdByUser: OrderCompanyUserEntity
}

export type JobDetailListItem = {
  workerTransportation: Array<WorkerTransportation>
  workerAmount: JobWorkerAmount | null
  shiftType: WorkShift
  yearOfExperience: YearExperience | null
  ageRequirement: JobAgeRequirement | null
  skillRequirement: JobReviewRequirement | null
  communicationRequirement: JobReviewRequirement | null
  reliabilityRequirement: JobReviewRequirement | null
  workerCertifications: Array<JobWorkerCertification>
  workDates: Array<string>
  id: string
  orderCompanyId: string
  orderCompany: OrderCompanyEntity
  constructionSiteId: string
  constructionSite: ConstructionSiteEntity
  jobCategoryId: string
  jobCategory: JobCategoryEntity
  salaryRangeFrom: number | null
  salaryRangeTo: number | null
  nationality: string | null
  description: string | null
  expiredAt: string
  isOpenForApply: boolean
  createdBy: string
  createdByUser: OrderCompanyUserEntity
  createdAt: string
  updatedAt: string | null
  deletedAt: string | null
}

export type WorkerType = 'WORKER' | 'SUB_WORKER'

export const WorkerType = {
  WORKER: 'WORKER',
  SUB_WORKER: 'SUB_WORKER',
} as const

export type FileDto = {
  ownerType: FileOwnerType
  privacy: FilePrivacy
  id: string
  s3Key: string
  originalName: string
  mimeType: string
  createdAt: string
  updatedAt: string | null
  ownerId: string
  url: string
  size: number | null
}

export type WorkerInOfferDto = {
  workerType: WorkerType
  id: string
  fullName: string
  nickname: string
  avatar: FileDto
}

export type OfferDetailListItem = {
  id: string
  createdAt: string
  updatedAt: string
  job: JobDetailListItem
  offerWorkDates: Array<string>
  workers: Array<WorkerInOfferDto>
}

export type JobWorkerExperience =
  | 'UNSPECIFIED'
  | 'LESS_THAN_1_YEAR'
  | 'MORE_THAN_1_YEAR'
  | 'MORE_THAN_3_YEARS'
  | 'MORE_THAN_10_YEARS'

export const JobWorkerExperience = {
  UNSPECIFIED: 'UNSPECIFIED',
  LESS_THAN_1_YEAR: 'LESS_THAN_1_YEAR',
  MORE_THAN_1_YEAR: 'MORE_THAN_1_YEAR',
  MORE_THAN_3_YEARS: 'MORE_THAN_3_YEARS',
  MORE_THAN_10_YEARS: 'MORE_THAN_10_YEARS',
} as const

export type NationalityType = 'JP' | 'VN' | 'PH' | 'CN' | 'OTHER'

export const NationalityType = {
  JP: 'JP',
  VN: 'VN',
  PH: 'PH',
  CN: 'CN',
  OTHER: 'OTHER',
} as const

export type CreateJobConstructionSiteDto = {
  name: string
  province: string
  municipality?: string
  address?: string
  latitude: number
  longitude: number
}

export type CreateJobDto = {
  constructionSiteId?: string
  shiftType: WorkShift
  salaryRangeFrom?: number
  salaryRangeTo?: number
  workerTransportation?: Array<WorkerTransportation>
  workerAmount?: JobWorkerAmount | null
  yearOfExperience?: JobWorkerExperience | null
  ageRequirement?: JobAgeRequirement | null
  skillRequirement?: JobReviewRequirement | null
  communicationRequirement?: JobReviewRequirement | null
  reliabilityRequirement?: JobReviewRequirement | null
  workerCertifications?: Array<JobWorkerCertification>
  nationality?: NationalityType | null
  description?: string | null
  workDates: Array<string>
  expiredAt: string
  constructionSite?: CreateJobConstructionSiteDto
  jobCategoryId: string
}

export type JobWorkDateDto = {
  date: string
}

export type JobDetailDto = {
  workerTransportation: Array<WorkerTransportation>
  workerAmount: JobWorkerAmount | null
  shiftType: WorkShift
  yearOfExperience: YearExperience | null
  ageRequirement: JobAgeRequirement | null
  skillRequirement: JobReviewRequirement | null
  communicationRequirement: JobReviewRequirement | null
  reliabilityRequirement: JobReviewRequirement | null
  workerCertifications: Array<JobWorkerCertification>
  workDates: Array<JobWorkDateDto>
  id: string
  orderCompanyId: string
  orderCompany: OrderCompanyEntity
  constructionSiteId: string
  constructionSite: ConstructionSiteEntity
  jobCategoryId: string
  jobCategory: JobCategoryEntity
  salaryRangeFrom: number | null
  salaryRangeTo: number | null
  nationality: string | null
  description: string | null
  expiredAt: string
  isOpenForApply: boolean
  createdBy: string
  createdByUser: OrderCompanyUserEntity
  createdAt: string
  updatedAt: string | null
  deletedAt: string | null
}

export type UpdateJobDto = {
  salaryRangeFrom?: number
  salaryRangeTo?: number
  workerTransportation?: Array<WorkerTransportation>
  workerAmount?: JobWorkerAmount | null
  yearOfExperience?: JobWorkerExperience | null
  ageRequirement?: JobAgeRequirement | null
  skillRequirement?: JobReviewRequirement | null
  communicationRequirement?: JobReviewRequirement | null
  reliabilityRequirement?: JobReviewRequirement | null
  workerCertifications?: Array<JobWorkerCertification>
  nationality?: NationalityType | null
  description?: string | null
  expiredAt: string
  workDates: Array<string>
}

export type OnlineStatus =
  | 'UNSPECIFIED'
  | 'ONLINE'
  | 'ACTIVE_WITHIN_3_DAYS'
  | 'ACTIVE_WITHIN_7_DAYS'
  | 'ACTIVE_WITHIN_30_DAYS'

export const OnlineStatus = {
  UNSPECIFIED: 'UNSPECIFIED',
  ONLINE: 'ONLINE',
  ACTIVE_WITHIN_3_DAYS: 'ACTIVE_WITHIN_3_DAYS',
  ACTIVE_WITHIN_7_DAYS: 'ACTIVE_WITHIN_7_DAYS',
  ACTIVE_WITHIN_30_DAYS: 'ACTIVE_WITHIN_30_DAYS',
} as const

export type SearchWorkerConstructionSiteDto = {
  province: string
}

export type SearchWorkerDto = {
  shiftType: WorkShift
  salaryRangeFrom?: number
  salaryRangeTo?: number
  workerTransportation?: Array<WorkerTransportation>
  workerAmount?: JobWorkerAmount | null
  yearOfExperience?: JobWorkerExperience | null
  ageRequirement?: JobAgeRequirement | null
  skillRequirement?: JobReviewRequirement | null
  communicationRequirement?: JobReviewRequirement | null
  reliabilityRequirement?: JobReviewRequirement | null
  workerCertifications?: Array<JobWorkerCertification>
  nationality?: NationalityType | null
  workDates: Array<string>
  onlineStatuses?: Array<OnlineStatus>
  constructionSite: SearchWorkerConstructionSiteDto
  jobCategoryId: string
}

export type SearchWorkerCombinationWorkerDto = {
  workerType: WorkerType
  id: string
  fullName: string | null
  nickname: string | null
}

export type SearchWorkerCombinationDto = {
  workers: Array<SearchWorkerCombinationWorkerDto>
  workDates: Array<string>
  id: string
}

export type OfferDto = {
  searchCombinationId: string
  offerWorkDates: Array<string>
}

export type StartChatDto = {
  constructionSiteId?: string
  shiftType: WorkShift
  salaryRangeFrom?: number
  salaryRangeTo?: number
  workerTransportation?: Array<WorkerTransportation>
  workerAmount?: JobWorkerAmount | null
  yearOfExperience?: JobWorkerExperience | null
  ageRequirement?: JobAgeRequirement | null
  skillRequirement?: JobReviewRequirement | null
  communicationRequirement?: JobReviewRequirement | null
  reliabilityRequirement?: JobReviewRequirement | null
  workerCertifications?: Array<JobWorkerCertification>
  nationality?: NationalityType | null
  description?: string | null
  workDates: Array<string>
  offers: Array<OfferDto>
  constructionSite?: CreateJobConstructionSiteDto
  jobCategoryId: string
}

export type OfferJobResponseDto = {
  constructionSiteId: string
}

export type Gender = 'MALE' | 'FEMALE' | 'OTHER'

export const Gender = {
  MALE: 'MALE',
  FEMALE: 'FEMALE',
  OTHER: 'OTHER',
} as const

export type AchievementDto = {
  file: FileDto
  id: string
  description: string | null
  title: string
}

export type QualificationDto = {
  file: FileDto
  id: string
  title: string
}

export type SkillDto = {
  id: string
  name: string
}

export type WorkerIdentityStatus = 'UNVERIFIED' | 'VERIFIED' | 'REJECTED'

export const WorkerIdentityStatus = {
  UNVERIFIED: 'UNVERIFIED',
  VERIFIED: 'VERIFIED',
  REJECTED: 'REJECTED',
} as const

export type WorkerIdentityDto = {
  status: WorkerIdentityStatus
  id: string
}

export type WorkerWorkingAreaDto = {
  id: string
  prefecture: string
}

export type WorkStyleDto = {
  transportation: WorkerTransportation | null
  yearExperience: YearExperience | null
  gender: Gender | null
  legalPersonality: LegalPersonality
  workerType: WorkerType
  workerAchievements: Array<AchievementDto>
  workerQualifications: Array<QualificationDto>
  skills: Array<SkillDto>
  jobCategories: Array<JobCategoryDto>
  workerIdentity: WorkerIdentityDto | null
  workerWorkingAreas: Array<WorkerWorkingAreaDto>
  reviewStat: UserReviewStatOptimizedEntity
  id: string
  desiredSalary: number | null
  nightShift: boolean | null
  nightShiftSalary: number | null
  introduction: string | null
  nickname: string | null
  fullName: string | null
  birthday: string | null
  prefecture: string | null
  city: string | null
  houseNumber: string | null
  building: string | null
  postalCode: string | null
  business: string | null
  nationality: string | null
  invoiceName: string | null
  invoiceTaxNumber: string | null
  workInsurance: boolean | null
  socialInsurance: boolean | null
  invoiceSupport: boolean | null
}

export type TalkRoomOrderBy = 'lastMessageAt' | 'createdAt'

export const TalkRoomOrderBy = {
  LAST_MESSAGE_AT: 'lastMessageAt',
  CREATED_AT: 'createdAt',
} as const

export type MessageType = 'IMAGE' | 'FILE' | 'TEXT'

export const MessageType = {
  IMAGE: 'IMAGE',
  FILE: 'FILE',
  TEXT: 'TEXT',
} as const

export type TalkRoomMessageDto = {
  messageType: MessageType
  id: string
  text: string | null
  createdAt: string
  updatedAt: string | null
}

export type TalkRoomRootWorkerDto = {
  avatar: FileDto
  id: string
  fullName: string | null
  nickname: string | null
}

export type TalkRoomDto = {
  id: string
  jobId: string
  lastMessageId?: string
  createdAt: string
  updatedAt: string
  deletedAt?: string
  lastMessage: TalkRoomMessageDto
  worker: TalkRoomRootWorkerDto
}

export type ConstructionSiteTalkRoomDto = {
  id: string
  name: string
  province: string
  municipality?: string
  address?: string
  status: string
  order: number
  createdAt: string
  updatedAt: string
  deletedAt?: string
  orderCompanyId: string
  lastMessageAt: string
  talkRooms: Array<TalkRoomDto>
}

export type GetTalkRoomsResponseDto = {
  data: Array<ConstructionSiteTalkRoomDto>
  nextCursor?: string | null
  hasMore: boolean
}

export type GetCalendarConstructionSiteDto = {
  id: string
  name: string
  address: string
  province: string
  municipality: string
}

export type GetCalendarJobCategoryParentDto = {
  id: string
  name: string
}

export type GetCalendarJobCategoryDto = {
  id: string
  name: string
  parent?: GetCalendarJobCategoryParentDto
}

export type GetCalendarJobDto = {
  id: string
  constructionSite: GetCalendarConstructionSiteDto
  jobCategory: GetCalendarJobCategoryDto
}

export type GetCalendarWorkerAvatarDto = {
  id: string
  s3Key: string
  originalName: string
}

export type GetCalendarWorkerDto = {
  id: string
  nickname: string
  fullName: string
  parentId?: string
  avatar?: GetCalendarWorkerAvatarDto
  worker?: GetCalendarWorkerDto
}

export type GetCalendarTalkRoomParticipationDto = {
  id: string
  workerId?: string
  worker?: GetCalendarWorkerDto
}

export type GetCalendarTalkRoomDto = {
  id: string
  payslipStatus:
    | 'PRE_CONTRACT'
    | 'WORKER_OFFERING'
    | 'JOB_CREATOR_OFFERING'
    | 'JOB_CREATOR_REQUESTING'
    | 'JOB_CREATOR_CANCELLED_BEFORE_WORKING'
    | 'JOB_CREATOR_CANCELLED_WHILE_WORKING'
    | 'WORKER_CANCELLED_BEFORE_WORKING'
    | 'WORKER_CANCELLED_WHILE_WORKING'
    | 'WORKER_REJECTED'
    | 'JOB_CREATOR_REJECTED'
    | 'WORKER_REQUESTING'
    | 'WORKER_WAITING_APPROVAL'
    | 'WORKER_WAITING_APPROVAL_CANCELLED'
    | 'WORKER_WAITING_APPROVAL_FINAL'
    | 'COMPLETED'
    | 'COMPLETED_CANCELLED'
    | 'IN_PROGRESS'
    | 'JOB_CREATOR_REQUEST_FOR_CORRECTION'
    | 'JOB_CREATOR_REQUEST_FOR_CORRECTION_CANCELLED'
    | 'JOB_CREATOR_REQUEST_FOR_CORRECTION_FINAL'
    | 'JOB_CREATOR_REQUEST_FOR_ADD_DATE'
  workDates: Array<string>
  workDatesInRange: Array<string>
  job: GetCalendarJobDto
  talkRoomParticipations: Array<GetCalendarTalkRoomParticipationDto>
}

export type GetCalendarResponseDto = {
  constructionSite: GetCalendarConstructionSiteDto
  workDates: Array<string>
  workDatesInRange: Array<string>
  talkRooms: Array<GetCalendarTalkRoomDto>
}

export type GetTalkRoomBySiteJobCategoryParentDto = {
  id: string
  name: string
}

export type GetTalkRoomBySiteJobCategoryDto = {
  id: string
  name: string
  parent?: GetTalkRoomBySiteJobCategoryParentDto | null
}

export type GetTalkRoomBySiteConstructionSiteDto = {
  id: string
  name: string
  address?: string | null
  province: string
  municipality?: string | null
}

export type GetTalkRoomBySiteJobDto = {
  id: string
  jobCategory: GetTalkRoomBySiteJobCategoryDto
  constructionSite: GetTalkRoomBySiteConstructionSiteDto
}

export type GetTalkRoomBySiteWorkerAvatarDto = {
  id: string
  s3Key: string
  originalName: string
}

export type GetTalkRoomBySiteWorkerDto = {
  id: string
  nickname: string
  fullName: string
  parentId?: string | null
  avatar?: GetTalkRoomBySiteWorkerAvatarDto | null
  worker?: GetTalkRoomBySiteWorkerDto | null
}

export type GetTalkRoomBySiteParticipationDto = {
  id: string
  workerId?: string | null
  worker?: GetTalkRoomBySiteWorkerDto | null
}

export type GetTalkRoomBySiteDto = {
  id: string
  job: GetTalkRoomBySiteJobDto
  workDates: Array<string>
  talkRoomParticipations: Array<GetTalkRoomBySiteParticipationDto>
}

export type GetTalkRoomBySiteResponseDto = {
  data: Array<GetTalkRoomBySiteDto>
}

export type TalkRoomConversationJobConstructionSiteDto = {
  status: ConstructionSiteStatus
  id: string
  name: string
  province: string
  municipality: string | null
  address: string | null
  order: number
  createdAt: string
}

export type TalkRoomConversationJobDto = {
  constructionSite: TalkRoomConversationJobConstructionSiteDto
  jobCategory: JobCategoryEntity
  id: string
}

export type WorkerAccountStatus = 'ACTIVE' | 'SUSPENDED' | 'INACTIVE' | 'DELETED'

export const WorkerAccountStatus = {
  ACTIVE: 'ACTIVE',
  SUSPENDED: 'SUSPENDED',
  INACTIVE: 'INACTIVE',
  DELETED: 'DELETED',
} as const

export type WorkerEntity = {
  transportation: WorkerTransportation | null
  status: WorkerAccountStatus
  yearExperience: YearExperience | null
  gender: Gender | null
  legalPersonality: LegalPersonality
  avatarId: string | null
  lastOnlineAt: string | null
  invoiceSupport: boolean | null
  nightShiftSalary: number | null
  latitude: number | null
  longitude: number | null
  invoiceName: string | null
  invoiceTaxNumber: string | null
  homePage: string | null
  socialInsurance: boolean | null
  workInsurance: boolean | null
  nightShift: boolean | null
  introduction: string | null
  prefecture: string | null
  houseNumber: string | null
  isFinishedBasicProfile: boolean
  nationality: string | null
  business: string | null
  hiraganaFirstName: string | null
  hiraganaLastName: string | null
  hiraganaFullName: string | null
  birthday: string | null
  postalCode: string | null
  city: string | null
  building: string | null
  fullName: string | null
  desiredSalary: number | null
  firstName: string | null
  lastName: string | null
  nickname: string | null
  parentId: string | null
  deletedAt: string | null
  paymentAccountId: string | null
  createdAt: string
  updatedAt: string | null
  id: string
  phoneNumber: string
  inventoryId: string | null
  avatar?: FileEntity | null
}

export type TalkRoomConversationParticipationDto = {
  workerId: string
  orderCompanyUserId: string
  isActualWorker: boolean
  worker: WorkerEntity
  orderCompanyUser: OrderCompanyUserEntity
}

export type TalkRoomConversationDto = {
  id: string
  job: TalkRoomConversationJobDto
  participations: Array<TalkRoomConversationParticipationDto>
  createdAt: string
  updatedAt: string
}

export type MessageUserDto = {
  id: string
  avatar?: string
  userType: 'manager' | 'worker' | 'staff' | 'sub-worker' | 'operator'
  nickname?: string
}

export type MessageFileDto = {
  url: string
  originalName: string
  mimeType: string
  size: number | null
}

export type MessageMetadataDto = {
  messageActionType:
    | 'WORKER_OFFERING'
    | 'IN_PROGRESS'
    | 'WORKER_REQUESTING'
    | 'WORKER_WAITING_APPROVAL'
    | 'WORKER_WAITING_APPROVAL_CANCELLED'
    | 'WORKER_WAITING_APPROVAL_FINAL'
    | 'WORKER_CANCELLED_BEFORE_WORKING'
    | 'WORKER_CANCELLED_WHILE_WORKING'
    | 'WORKER_REJECTED'
    | 'WORKER_ACCEPT_ADD_DATE'
    | 'WORKER_REJECT_ADD_DATE'
    | 'WORKER_SELF_REJECT'
    | 'JOB_CREATOR_OFFERING'
    | 'JOB_CREATOR_REQUESTING'
    | 'JOB_CREATOR_ACCEPT_JOB'
    | 'JOB_CREATOR_CANCELLED_BEFORE_WORKING'
    | 'JOB_CREATOR_CANCELLED_WHILE_WORKING'
    | 'JOB_CREATOR_REJECTED'
    | 'JOB_CREATOR_APPROVED'
    | 'JOB_CREATOR_APPROVED_CANCELLED'
    | 'JOB_CREATOR_APPROVED_FINAL'
    | 'JOB_CREATOR_RETURN_FOR_CORRECTION'
    | 'JOB_CREATOR_ADD_DATE'
    | 'JOB_CREATOR_DELETE_DATE'
    | 'JOB_CREATOR_SELF_REJECT'
  payslipId?: string
}

export type MessageDto = {
  messageType: MessageType
  user: MessageUserDto
  image?: string
  file?: MessageFileDto
  metadata?: MessageMetadataDto | null
  id: string
  text: string | null
  createdAt: string
}

export type GetOrderCompanyMessageRes = {
  hasMore: boolean
  messages: Array<MessageDto>
  cursorId?: string
}

export type PayslipStatus =
  | 'PRE_CONTRACT'
  | 'WORKER_OFFERING'
  | 'JOB_CREATOR_OFFERING'
  | 'JOB_CREATOR_REQUESTING'
  | 'JOB_CREATOR_CANCELLED_BEFORE_WORKING'
  | 'JOB_CREATOR_CANCELLED_WHILE_WORKING'
  | 'WORKER_CANCELLED_BEFORE_WORKING'
  | 'WORKER_CANCELLED_WHILE_WORKING'
  | 'WORKER_REJECTED'
  | 'JOB_CREATOR_REJECTED'
  | 'WORKER_REQUESTING'
  | 'WORKER_WAITING_APPROVAL'
  | 'WORKER_WAITING_APPROVAL_CANCELLED'
  | 'WORKER_WAITING_APPROVAL_FINAL'
  | 'COMPLETED'
  | 'COMPLETED_CANCELLED'
  | 'IN_PROGRESS'
  | 'JOB_CREATOR_REQUEST_FOR_CORRECTION'
  | 'JOB_CREATOR_REQUEST_FOR_CORRECTION_CANCELLED'
  | 'JOB_CREATOR_REQUEST_FOR_CORRECTION_FINAL'
  | 'JOB_CREATOR_REQUEST_FOR_ADD_DATE'

export const PayslipStatus = {
  PRE_CONTRACT: 'PRE_CONTRACT',
  WORKER_OFFERING: 'WORKER_OFFERING',
  JOB_CREATOR_OFFERING: 'JOB_CREATOR_OFFERING',
  JOB_CREATOR_REQUESTING: 'JOB_CREATOR_REQUESTING',
  JOB_CREATOR_CANCELLED_BEFORE_WORKING: 'JOB_CREATOR_CANCELLED_BEFORE_WORKING',
  JOB_CREATOR_CANCELLED_WHILE_WORKING: 'JOB_CREATOR_CANCELLED_WHILE_WORKING',
  WORKER_CANCELLED_BEFORE_WORKING: 'WORKER_CANCELLED_BEFORE_WORKING',
  WORKER_CANCELLED_WHILE_WORKING: 'WORKER_CANCELLED_WHILE_WORKING',
  WORKER_REJECTED: 'WORKER_REJECTED',
  JOB_CREATOR_REJECTED: 'JOB_CREATOR_REJECTED',
  WORKER_REQUESTING: 'WORKER_REQUESTING',
  WORKER_WAITING_APPROVAL: 'WORKER_WAITING_APPROVAL',
  WORKER_WAITING_APPROVAL_CANCELLED: 'WORKER_WAITING_APPROVAL_CANCELLED',
  WORKER_WAITING_APPROVAL_FINAL: 'WORKER_WAITING_APPROVAL_FINAL',
  COMPLETED: 'COMPLETED',
  COMPLETED_CANCELLED: 'COMPLETED_CANCELLED',
  IN_PROGRESS: 'IN_PROGRESS',
  JOB_CREATOR_REQUEST_FOR_CORRECTION: 'JOB_CREATOR_REQUEST_FOR_CORRECTION',
  JOB_CREATOR_REQUEST_FOR_CORRECTION_CANCELLED: 'JOB_CREATOR_REQUEST_FOR_CORRECTION_CANCELLED',
  JOB_CREATOR_REQUEST_FOR_CORRECTION_FINAL: 'JOB_CREATOR_REQUEST_FOR_CORRECTION_FINAL',
  JOB_CREATOR_REQUEST_FOR_ADD_DATE: 'JOB_CREATOR_REQUEST_FOR_ADD_DATE',
} as const

export type WorkerAvatarDto = {
  id: string
  s3Key: string
  url: string
}

export type WorkerDto = {
  id: string
  fullName: string
  nickname: string
  avatar?: WorkerAvatarDto
  workerType: WorkerType
}

export type JobPayslipWorkDateDto = {
  date: string
}

export type WorkerPayslipWorkDateDto = {
  date: string
  isAutoFilled: boolean
}

export type WorkerWorkingScheduleStatus = 'CANCELLED' | 'WORKING' | 'ADDING' | 'DELETING'

export const WorkerWorkingScheduleStatus = {
  CANCELLED: 'CANCELLED',
  WORKING: 'WORKING',
  ADDING: 'ADDING',
  DELETING: 'DELETING',
} as const

export type WorkerWorkingScheduleDto = {
  date: string
  status: WorkerWorkingScheduleStatus
}

export type WorkerPayslipDto = {
  id: string
  createdAt: string
  workFee: number
  privateTransportationFee: number
  numberOfPrivateTransportation?: number | null
  publicTransportationFee: number
  numberOfPublicTransportation?: number | null
  materialFee: number
  numberOfMaterial: number
  parkingFee: number
  numberOfParking: number
  other1Fee: number
  numberOfOther1: number
  other2Fee: number
  numberOfOther2: number
  cancelFee: number
  worker: WorkerDto
  jobPayslipWorkDates: Array<JobPayslipWorkDateDto>
  workerPayslipWorkDates: Array<WorkerPayslipWorkDateDto>
  workerWorkingSchedules: Array<WorkerWorkingScheduleDto>
}

export type CreatedByUserAvatarDto = {
  s3Key: string
  url: string
  id: string
}

export type CreatedByUserDto = {
  id: string
  nickname: string
  avatar: CreatedByUserAvatarDto
}

export type PayslipDto = {
  id: string
  createdAt: string
  createdByWorkerId?: string | null
  createdByOrderCompanyUserId?: string | null
  workerPayslips: Array<WorkerPayslipDto>
  createdByWorker?: CreatedByUserDto
  createdByOrderCompanyUser?: CreatedByUserDto
}

export type WorkerWorkingScheduleInOtherTalkRoomDto = {
  workerId: string
  date: string
  status: WorkerWorkingScheduleStatus
  shift: WorkShift
  isLatestVersion: boolean
}

export type GetTalkRoomQoutationResDto = {
  id: string
  createdAt: string
  payslipStatus?: PayslipStatus
  lastPayslip?: PayslipDto
  timingApplyCancelFee?: string | null
  workerWorkingSchedulesInOtherTalkRoom: Array<WorkerWorkingScheduleInOtherTalkRoomDto>
}

export type GetPayslipHistoryResDto = {
  id: string
  createdAt: string
  createdByWorkerId: string
  createdByOrderCompanyUserId: string
  createdByWorker?: CreatedByUserDto
  createdByOrderCompanyUser?: CreatedByUserDto
}

export type WorkerPayslipInHistoryDto = {
  id: string
  createdAt: string
  workFee: number
  privateTransportationFee: number
  numberOfPrivateTransportation?: number | null
  publicTransportationFee: number
  numberOfPublicTransportation?: number | null
  materialFee: number
  numberOfMaterial: number
  parkingFee: number
  numberOfParking: number
  other1Fee: number
  numberOfOther1: number
  other2Fee: number
  numberOfOther2: number
  worker: WorkerDto
  jobPayslipWorkDates: Array<string>
  workerPayslipWorkDates: Array<string>
  workerWorkingSchedules: Array<WorkerWorkingScheduleDto>
}

export type PayslipInHistoryDto = {
  id: string
  createdAt: string
  createdByWorkerId?: string | null
  createdByOrderCompanyUserId?: string | null
  status: PayslipStatus
  workerPayslips: Array<WorkerPayslipInHistoryDto>
  createdByWorker?: CreatedByUserDto
  createdByOrderCompanyUser?: CreatedByUserDto
}

export type ContentType = 'TEXT' | 'IMAGE' | 'FILE'

export const ContentType = {
  TEXT: 'TEXT',
  IMAGE: 'IMAGE',
  FILE: 'FILE',
} as const

export type CreateMessageReq = {
  type: ContentType
  text?: string
  file?: UpdateFileFieldDto
  identifier?: string
  displayText?: string
  metadata?: {
    [key: string]: unknown
  }
}

export type JobPayslipWorkDateItemDto = {
  date: string
}

export type WorkerPayslipWorkDateItemDto = {
  date: string
  isAutoFilled: boolean
}

export type WorkerPayslipForSubmitDto = {
  jobPayslipWorkDates: Array<JobPayslipWorkDateItemDto>
  workerPayslipWorkDates: Array<WorkerPayslipWorkDateItemDto>
  workerId: string
  numberOfPrivateTransportation?: number
  numberOfPublicTransportation?: number
}

export type SubmitQuotationDto = {
  workerPayslips: Array<WorkerPayslipForSubmitDto>
  lastPayslipId: string
}

export type AcceptQuotationDto = {
  lastPayslipId: string
}

export type RejectQuotationDto = {
  lastPayslipId: string
}

export type CancelQuotationDto = {
  lastPayslipId: string
  cancelReason: string
}

export type WorkerWorkDateDto = {
  workerId: string
  workDates: Array<string>
}

export type RemoveWorkDateBodyDto = {
  lastPayslipId: string
  removeWorkDates: Array<WorkerWorkDateDto>
}

export type AddWorkDateBodyDto = {
  lastPayslipId: string
  addWorkDates: Array<WorkerWorkDateDto>
}

export type ReturnForCorrectionBodyDto = {
  lastPayslipId: string
  reason: string
}

export type ApprovePayslipBodyDto = {
  lastPayslipId: string
}

export type CancelAddWorkDateRequestBodyDto = {
  lastPayslipId: string
}

export type TodoCreateDto = {
  description: string
}

export type TodoDto = {
  id: string
  description: string
  isDone: boolean
  createdAt: string
  updatedAt: string
  deletedAt: string
}

export type TodoGetListResponseDto = {
  items: Array<TodoDto>
  totalItems: number
}

export type UpdateTodoDto = {
  /**
   * Todo description
   */
  description?: string
  /**
   * Todo is done
   */
  isDone?: boolean
}

export type ReviewType = 'COMMUNICATION' | 'RELIABILITY' | 'SKILL' | 'NEGATIVE'

export const ReviewType = {
  COMMUNICATION: 'COMMUNICATION',
  RELIABILITY: 'RELIABILITY',
  SKILL: 'SKILL',
  NEGATIVE: 'NEGATIVE',
} as const

export type CreateReviewDto = {
  reviewType: ReviewType
  workerId: string
  negativeReviewReason?: string | null
}

export type ReviewDto = {
  reviewType: ReviewType
  workerId: string
  negativeReviewReason?: string | null
}

export type WorkerWithReviewDto = {
  avatar?: WorkerAvatarDto | null
  review?: ReviewDto | null
  id: string
  fullName?: string | null
  nickname?: string | null
  lastReviewedAt: string | null
}

export type GetReviewsOfTalkRoomDto = {
  members: Array<WorkerWithReviewDto>
}

export type ReviewOfUserDto = {
  reviewType: ReviewType
  avatar?: WorkerAvatarDto | null
  identity: WorkerIdentityStatus
  createdAt: string
  negativeReviewReason: string | null
  nickName: string | null
  fullName: string | null
  constructionSiteName?: string | null
}

export type GetReviewsOfUserResDto = {
  reviews: Array<ReviewOfUserDto>
}

export type ErrorCode =
  | 'TOKEN_EXPIRED'
  | 'INVALID_TOKEN'
  | 'INVALID_FILE_URL'
  | 'UNAUTHORIZED'
  | 'EMAIL_ALREADY_REGISTERED'
  | 'PASSWORD_INVALID'
  | 'INVALID_CREDENTIALS'
  | 'EMAIL_NOT_FOUND'
  | 'STAFF_ALREADY_REGISTERED'
  | 'STAFF_ALREADY_INVITED'
  | 'USER_NOT_ACTIVE'
  | 'ORDER_COMPANY_NOT_FOUND'
  | 'NEED_TO_SPECIFY_REUSE_ACCOUNT_OPTION'
  | 'KEY_FORBIDDEN'
  | 'LEGAL_PERSONALITY_REQUIRED'
  | 'INVALID_DATA'
  | 'JOB_CATEGORY_IDS_INVALID'
  | 'NOT_FOUND'
  | 'INVALID_PHONE_NUMBER'
  | 'OTP_EXPIRED'
  | 'OTP_INVALID'
  | 'OTP_LIMIT_REACHED'
  | 'OTP_SENT_TOO_FAST'
  | 'INVALID_DOCUMENT_TYPE'
  | 'INVALID_ADDITIONAL_DOCUMENT_TYPE'
  | 'INVALID_NUMBER_OF_FILES'
  | 'DATA_REQUIRED'
  | 'DATA_NOT_ALLOWED'
  | 'ORDER_COMPANY_NOT_VERIFIED'
  | 'SEARCH_COMBINATION_NOT_EXIST'
  | 'SEARCH_COMBINATION_WORK_DATE_INVALID'
  | 'NOT_THE_LASTEST_PAYSLIP'
  | 'PAYSLIP_STATUS_NOT_PRE_CONTRACT'
  | 'WORKER_PAYSLIPS_NOT_VALID'
  | 'WORKER_WORKING_SCHEDULE_MUST_BE_AFTER_TODAY'
  | 'WORKER_WORKING_SCHEDULE_IS_CONFLICT'
  | 'WORKER_WORKING_SCHEDULE_ALL_EMPTY'
  | 'PAYS_SLIP_STATUS_NOT_IN_PROGRESS'
  | 'JOB_IS_ALREADY_STARTED'
  | 'JOB_IS_NOT_STARTED_YET'
  | 'NO_WORK_DATE_TO_REMOVE'
  | 'REMOVE_WORK_DATES_NOT_VALID'
  | 'ADD_WORK_DATES_NOT_VALID'
  | 'NO_WORK_DATE_TO_ADD'
  | 'PAYS_SLIP_STATUS_NOT_VALID'
  | 'CONFLICT_WORKER_WORKING_SCHEDULES'
  | 'ALREADY_REVIEWED_OR_RECENTLY_REVIEWED'
  | 'JOB_IS_NOT_COMPLETED'

export const ErrorCode = {
  TOKEN_EXPIRED: 'TOKEN_EXPIRED',
  INVALID_TOKEN: 'INVALID_TOKEN',
  INVALID_FILE_URL: 'INVALID_FILE_URL',
  UNAUTHORIZED: 'UNAUTHORIZED',
  EMAIL_ALREADY_REGISTERED: 'EMAIL_ALREADY_REGISTERED',
  PASSWORD_INVALID: 'PASSWORD_INVALID',
  INVALID_CREDENTIALS: 'INVALID_CREDENTIALS',
  EMAIL_NOT_FOUND: 'EMAIL_NOT_FOUND',
  STAFF_ALREADY_REGISTERED: 'STAFF_ALREADY_REGISTERED',
  STAFF_ALREADY_INVITED: 'STAFF_ALREADY_INVITED',
  USER_NOT_ACTIVE: 'USER_NOT_ACTIVE',
  ORDER_COMPANY_NOT_FOUND: 'ORDER_COMPANY_NOT_FOUND',
  NEED_TO_SPECIFY_REUSE_ACCOUNT_OPTION: 'NEED_TO_SPECIFY_REUSE_ACCOUNT_OPTION',
  KEY_FORBIDDEN: 'KEY_FORBIDDEN',
  LEGAL_PERSONALITY_REQUIRED: 'LEGAL_PERSONALITY_REQUIRED',
  INVALID_DATA: 'INVALID_DATA',
  JOB_CATEGORY_IDS_INVALID: 'JOB_CATEGORY_IDS_INVALID',
  NOT_FOUND: 'NOT_FOUND',
  INVALID_PHONE_NUMBER: 'INVALID_PHONE_NUMBER',
  OTP_EXPIRED: 'OTP_EXPIRED',
  OTP_INVALID: 'OTP_INVALID',
  OTP_LIMIT_REACHED: 'OTP_LIMIT_REACHED',
  OTP_SENT_TOO_FAST: 'OTP_SENT_TOO_FAST',
  INVALID_DOCUMENT_TYPE: 'INVALID_DOCUMENT_TYPE',
  INVALID_ADDITIONAL_DOCUMENT_TYPE: 'INVALID_ADDITIONAL_DOCUMENT_TYPE',
  INVALID_NUMBER_OF_FILES: 'INVALID_NUMBER_OF_FILES',
  DATA_REQUIRED: 'DATA_REQUIRED',
  DATA_NOT_ALLOWED: 'DATA_NOT_ALLOWED',
  ORDER_COMPANY_NOT_VERIFIED: 'ORDER_COMPANY_NOT_VERIFIED',
  SEARCH_COMBINATION_NOT_EXIST: 'SEARCH_COMBINATION_NOT_EXIST',
  SEARCH_COMBINATION_WORK_DATE_INVALID: 'SEARCH_COMBINATION_WORK_DATE_INVALID',
  NOT_THE_LASTEST_PAYSLIP: 'NOT_THE_LASTEST_PAYSLIP',
  PAYSLIP_STATUS_NOT_PRE_CONTRACT: 'PAYSLIP_STATUS_NOT_PRE_CONTRACT',
  WORKER_PAYSLIPS_NOT_VALID: 'WORKER_PAYSLIPS_NOT_VALID',
  WORKER_WORKING_SCHEDULE_MUST_BE_AFTER_TODAY: 'WORKER_WORKING_SCHEDULE_MUST_BE_AFTER_TODAY',
  WORKER_WORKING_SCHEDULE_IS_CONFLICT: 'WORKER_WORKING_SCHEDULE_IS_CONFLICT',
  WORKER_WORKING_SCHEDULE_ALL_EMPTY: 'WORKER_WORKING_SCHEDULE_ALL_EMPTY',
  PAYS_SLIP_STATUS_NOT_IN_PROGRESS: 'PAYS_SLIP_STATUS_NOT_IN_PROGRESS',
  JOB_IS_ALREADY_STARTED: 'JOB_IS_ALREADY_STARTED',
  JOB_IS_NOT_STARTED_YET: 'JOB_IS_NOT_STARTED_YET',
  NO_WORK_DATE_TO_REMOVE: 'NO_WORK_DATE_TO_REMOVE',
  REMOVE_WORK_DATES_NOT_VALID: 'REMOVE_WORK_DATES_NOT_VALID',
  ADD_WORK_DATES_NOT_VALID: 'ADD_WORK_DATES_NOT_VALID',
  NO_WORK_DATE_TO_ADD: 'NO_WORK_DATE_TO_ADD',
  PAYS_SLIP_STATUS_NOT_VALID: 'PAYS_SLIP_STATUS_NOT_VALID',
  CONFLICT_WORKER_WORKING_SCHEDULES: 'CONFLICT_WORKER_WORKING_SCHEDULES',
  ALREADY_REVIEWED_OR_RECENTLY_REVIEWED: 'ALREADY_REVIEWED_OR_RECENTLY_REVIEWED',
  JOB_IS_NOT_COMPLETED: 'JOB_IS_NOT_COMPLETED',
} as const

export type EventType = 'NEW_MESSAGE'

export const EventType = {
  NEW_MESSAGE: 'NEW_MESSAGE',
} as const

export type AppControllerCheckHealthV1Data = {
  body?: never
  path?: never
  query?: never
  url: '/api/v1/health'
}

export type AppControllerCheckHealthV1Responses = {
  200: unknown
}

export type NavitimeControllerGetMapScriptV1Data = {
  body?: never
  path?: never
  query?: never
  url: '/api/v1/navitime/map-script'
}

export type NavitimeControllerGetMapScriptV1Responses = {
  200: NavitimeRes
}

export type NavitimeControllerGetMapScriptV1Response =
  NavitimeControllerGetMapScriptV1Responses[keyof NavitimeControllerGetMapScriptV1Responses]

export type NavitimeControllerGetAddressFromCoordV1Data = {
  body?: never
  path?: never
  query: {
    latitude: number
    longitude: number
  }
  url: '/api/v1/navitime/address-from-coord'
}

export type NavitimeControllerGetAddressFromCoordV1Responses = {
  200: GetAddressRes
}

export type NavitimeControllerGetAddressFromCoordV1Response =
  NavitimeControllerGetAddressFromCoordV1Responses[keyof NavitimeControllerGetAddressFromCoordV1Responses]

export type NavitimeControllerGetCoordFromAddressV1Data = {
  body?: never
  path?: never
  query: {
    /**
     * 市区町村
     */
    city?: string
    /**
     * 都道府県
     */
    prefecture: string
    /**
     * 番地・丁目など
     */
    houseNumber?: string
  }
  url: '/api/v1/navitime/coord-from-address'
}

export type NavitimeControllerGetCoordFromAddressV1Responses = {
  200: GetLatLongRes
}

export type NavitimeControllerGetCoordFromAddressV1Response =
  NavitimeControllerGetCoordFromAddressV1Responses[keyof NavitimeControllerGetCoordFromAddressV1Responses]

export type AuthControllerManagerSignUpV1Data = {
  body: ManagerSignUpDto
  path?: never
  query?: never
  url: '/api/v1/auth/manager/sign-up/send-mail'
}

export type AuthControllerManagerSignUpV1Responses = {
  201: unknown
}

export type AuthControllerVerifyV1Data = {
  body: ManagerSignUpVerifyDto
  path?: never
  query?: never
  url: '/api/v1/auth/manager/sign-up/verify'
}

export type AuthControllerVerifyV1Responses = {
  201: ManagerSignUpVerifyTokenPayload
}

export type AuthControllerVerifyV1Response =
  AuthControllerVerifyV1Responses[keyof AuthControllerVerifyV1Responses]

export type AuthControllerSignUpSetPasswordV1Data = {
  body: ManagerSignUpSetPasswordDto
  path?: never
  query?: never
  url: '/api/v1/auth/manager/sign-up/set-password'
}

export type AuthControllerSignUpSetPasswordV1Responses = {
  201: OrderCompanyUserSignInRes
}

export type AuthControllerSignUpSetPasswordV1Response =
  AuthControllerSignUpSetPasswordV1Responses[keyof AuthControllerSignUpSetPasswordV1Responses]

export type AuthControllerActivateStaffAccountV1Data = {
  body: ActivateStaffAccountVerifyDto
  path?: never
  query?: never
  url: '/api/v1/auth/staff/activate/verify'
}

export type AuthControllerActivateStaffAccountV1Responses = {
  201: ActivateStaffAccountVerifyRes
}

export type AuthControllerActivateStaffAccountV1Response =
  AuthControllerActivateStaffAccountV1Responses[keyof AuthControllerActivateStaffAccountV1Responses]

export type AuthControllerActivateStaffAccountSetPasswordV1Data = {
  body: ActivateStaffAccountSetPasswordDto
  path?: never
  query?: never
  url: '/api/v1/auth/staff/activate/set-password'
}

export type AuthControllerActivateStaffAccountSetPasswordV1Responses = {
  201: OrderCompanyUserSignInRes
}

export type AuthControllerActivateStaffAccountSetPasswordV1Response =
  AuthControllerActivateStaffAccountSetPasswordV1Responses[keyof AuthControllerActivateStaffAccountSetPasswordV1Responses]

export type AuthControllerForgotPasswordSendMailV1Data = {
  body: ForgotPasswordSendMailDto
  path?: never
  query?: never
  url: '/api/v1/auth/forgot-password/send-mail'
}

export type AuthControllerForgotPasswordSendMailV1Responses = {
  201: unknown
}

export type AuthControllerForgotPasswordVerifyV1Data = {
  body: ForgotPasswordVerifyDto
  path?: never
  query?: never
  url: '/api/v1/auth/forgot-password/verify'
}

export type AuthControllerForgotPasswordVerifyV1Responses = {
  201: unknown
}

export type AuthControllerForgotPasswordSetPasswordV1Data = {
  body: ForgotPasswordSetPasswordDto
  path?: never
  query?: never
  url: '/api/v1/auth/forgot-password/set-password'
}

export type AuthControllerForgotPasswordSetPasswordV1Responses = {
  201: unknown
}

export type AuthControllerSignInV1Data = {
  body: ManagerSignInDto
  path?: never
  query?: never
  url: '/api/v1/auth/login'
}

export type AuthControllerSignInV1Responses = {
  201: OrderCompanyUserSignInRes
}

export type AuthControllerSignInV1Response =
  AuthControllerSignInV1Responses[keyof AuthControllerSignInV1Responses]

export type AuthControllerGetProfileV1Data = {
  body?: never
  path?: never
  query?: never
  url: '/api/v1/auth/profile'
}

export type AuthControllerGetProfileV1Responses = {
  200: OrderCompanyUserDto
}

export type AuthControllerGetProfileV1Response =
  AuthControllerGetProfileV1Responses[keyof AuthControllerGetProfileV1Responses]

export type AuthControllerUpdateProfileV1Data = {
  body: UpdateStaffProfileDto
  path?: never
  query?: never
  url: '/api/v1/auth/profile'
}

export type AuthControllerUpdateProfileV1Responses = {
  200: unknown
}

export type AuthControllerUpdateProfileAvatarV1Data = {
  body: UpdateStaffProfileAvatarDto
  path?: never
  query?: never
  url: '/api/v1/auth/profile/avatar'
}

export type AuthControllerUpdateProfileAvatarV1Responses = {
  200: UpdateAvatarRes
}

export type AuthControllerUpdateProfileAvatarV1Response =
  AuthControllerUpdateProfileAvatarV1Responses[keyof AuthControllerUpdateProfileAvatarV1Responses]

export type AuthControllerChangePasswordV1Data = {
  body: ChangePasswordDto
  path?: never
  query?: never
  url: '/api/v1/auth/change-password'
}

export type AuthControllerChangePasswordV1Responses = {
  201: unknown
}

export type AuthControllerRefreshTokenV1Data = {
  body: RefreshTokenDto
  path?: never
  query?: never
  url: '/api/v1/auth/refresh-token'
}

export type AuthControllerRefreshTokenV1Responses = {
  201: unknown
}

export type AuthControllerLogoutV1Data = {
  body: LogoutDto
  path?: never
  query?: never
  url: '/api/v1/auth/logout'
}

export type AuthControllerLogoutV1Responses = {
  201: unknown
}

export type FileControllerGetUploadPresignedUrlV1Data = {
  body?: never
  path?: never
  query: {
    privacy: FilePrivacy
    extension: FileExtension
  }
  url: '/api/v1/file/presigned-url'
}

export type FileControllerGetUploadPresignedUrlV1Responses = {
  200: GetUploadPresignedUrlResDto
}

export type FileControllerGetUploadPresignedUrlV1Response =
  FileControllerGetUploadPresignedUrlV1Responses[keyof FileControllerGetUploadPresignedUrlV1Responses]

export type ManagerStaffControllerGetStaffsV1Data = {
  body?: never
  path?: never
  query?: {
    statuses?: Array<'ACTIVE' | 'SUSPENDED' | 'INVITING'>
    keyword?: string
  }
  url: '/api/v1/manager/staffs'
}

export type ManagerStaffControllerGetStaffsV1Responses = {
  200: ManagerStaffGetListResponseDto
}

export type ManagerStaffControllerGetStaffsV1Response =
  ManagerStaffControllerGetStaffsV1Responses[keyof ManagerStaffControllerGetStaffsV1Responses]

export type ManagerStaffControllerCreateStaffV1Data = {
  body: ManagerStaffCreateDto
  path?: never
  query?: never
  url: '/api/v1/manager/staffs'
}

export type ManagerStaffControllerCreateStaffV1Responses = {
  201: unknown
}

export type ManagerStaffControllerDeleteStaffV1Data = {
  body?: never
  path: {
    id: string
  }
  query?: never
  url: '/api/v1/manager/staffs/{id}'
}

export type ManagerStaffControllerDeleteStaffV1Responses = {
  200: unknown
}

export type ManagerStaffControllerGetStaffV1Data = {
  body?: never
  path: {
    id: string
  }
  query?: never
  url: '/api/v1/manager/staffs/{id}'
}

export type ManagerStaffControllerGetStaffV1Responses = {
  200: OrderCompanyUserDto
}

export type ManagerStaffControllerGetStaffV1Response =
  ManagerStaffControllerGetStaffV1Responses[keyof ManagerStaffControllerGetStaffV1Responses]

export type ManagerOrderCompanyControllerGetOrderCompanyV1Data = {
  body?: never
  path?: never
  query?: never
  url: '/api/v1/manager/order-company'
}

export type ManagerOrderCompanyControllerGetOrderCompanyV1Responses = {
  200: GetOrderCompanyResponseDto
}

export type ManagerOrderCompanyControllerGetOrderCompanyV1Response =
  ManagerOrderCompanyControllerGetOrderCompanyV1Responses[keyof ManagerOrderCompanyControllerGetOrderCompanyV1Responses]

export type ManagerOrderCompanyControllerUpdateOrderCompanyV1Data = {
  body: UpdateOrderCompanyDto
  path?: never
  query?: never
  url: '/api/v1/manager/order-company'
}

export type ManagerOrderCompanyControllerUpdateOrderCompanyV1Responses = {
  200: unknown
}

export type ManagerOrderCompanyControllerGetOrderCompanyJobCategoriesV1Data = {
  body?: never
  path?: never
  query?: never
  url: '/api/v1/manager/order-company/job-categories'
}

export type ManagerOrderCompanyControllerGetOrderCompanyJobCategoriesV1Responses = {
  200: Array<JobCategoryDto>
}

export type ManagerOrderCompanyControllerGetOrderCompanyJobCategoriesV1Response =
  ManagerOrderCompanyControllerGetOrderCompanyJobCategoriesV1Responses[keyof ManagerOrderCompanyControllerGetOrderCompanyJobCategoriesV1Responses]

export type ManagerOrderCompanyControllerUpdateOrderCompanyJobCategoryV1Data = {
  body: UpdateOrderCompanyJobCategoryDto
  path?: never
  query?: never
  url: '/api/v1/manager/order-company/job-categories'
}

export type ManagerOrderCompanyControllerUpdateOrderCompanyJobCategoryV1Responses = {
  200: Array<JobCategoryDto>
}

export type ManagerOrderCompanyControllerUpdateOrderCompanyJobCategoryV1Response =
  ManagerOrderCompanyControllerUpdateOrderCompanyJobCategoryV1Responses[keyof ManagerOrderCompanyControllerUpdateOrderCompanyJobCategoryV1Responses]

export type ManagerOrderCompanyControllerGetOrderCompanyAchievementsV1Data = {
  body?: never
  path?: never
  query?: never
  url: '/api/v1/manager/order-company/achievements'
}

export type ManagerOrderCompanyControllerGetOrderCompanyAchievementsV1Responses = {
  200: Array<OrderCompanyAchievementResDto>
}

export type ManagerOrderCompanyControllerGetOrderCompanyAchievementsV1Response =
  ManagerOrderCompanyControllerGetOrderCompanyAchievementsV1Responses[keyof ManagerOrderCompanyControllerGetOrderCompanyAchievementsV1Responses]

export type ManagerOrderCompanyControllerCreateOrderCompanyAchievementV1Data = {
  body: CreateOrderCompanyAchievementDto
  path?: never
  query?: never
  url: '/api/v1/manager/order-company/achievements'
}

export type ManagerOrderCompanyControllerCreateOrderCompanyAchievementV1Responses = {
  201: OrderCompanyAchievementResDto
}

export type ManagerOrderCompanyControllerCreateOrderCompanyAchievementV1Response =
  ManagerOrderCompanyControllerCreateOrderCompanyAchievementV1Responses[keyof ManagerOrderCompanyControllerCreateOrderCompanyAchievementV1Responses]

export type ManagerOrderCompanyControllerDeleteOrderCompanyAchievementV1Data = {
  body?: never
  path: {
    id: string
  }
  query?: never
  url: '/api/v1/manager/order-company/achievements/{id}'
}

export type ManagerOrderCompanyControllerDeleteOrderCompanyAchievementV1Responses = {
  200: unknown
}

export type ManagerOrderCompanyControllerGetOrderCompanyAchievementV1Data = {
  body?: never
  path: {
    id: string
  }
  query?: never
  url: '/api/v1/manager/order-company/achievements/{id}'
}

export type ManagerOrderCompanyControllerGetOrderCompanyAchievementV1Responses = {
  200: OrderCompanyAchievementResDto
}

export type ManagerOrderCompanyControllerGetOrderCompanyAchievementV1Response =
  ManagerOrderCompanyControllerGetOrderCompanyAchievementV1Responses[keyof ManagerOrderCompanyControllerGetOrderCompanyAchievementV1Responses]

export type ManagerOrderCompanyControllerUpdateOrderCompanyAchievementV1Data = {
  body: UpdateOrderCompanyAchievementDto
  path: {
    id: string
  }
  query?: never
  url: '/api/v1/manager/order-company/achievements/{id}'
}

export type ManagerOrderCompanyControllerUpdateOrderCompanyAchievementV1Responses = {
  200: unknown
}

export type ManagerOrderCompanyControllerSendOtpV1Data = {
  body: VerifyPhoneNumberSendOtpDto
  path?: never
  query?: never
  url: '/api/v1/manager/order-company/verify-phone/send-otp'
}

export type ManagerOrderCompanyControllerSendOtpV1Responses = {
  201: unknown
}

export type ManagerOrderCompanyControllerVerifyOtpV1Data = {
  body: VerifyPhoneNumberVerifyOtpDto
  path?: never
  query?: never
  url: '/api/v1/manager/order-company/verify-phone/verify-otp'
}

export type ManagerOrderCompanyControllerVerifyOtpV1Responses = {
  201: unknown
}

export type ManagerOrderCompanyControllerGetOrderCompanyDocumentsV1Data = {
  body?: never
  path?: never
  query?: never
  url: '/api/v1/manager/order-company/documents'
}

export type ManagerOrderCompanyControllerGetOrderCompanyDocumentsV1Responses = {
  200: GetOrderCompanyDocumentsResDto
}

export type ManagerOrderCompanyControllerGetOrderCompanyDocumentsV1Response =
  ManagerOrderCompanyControllerGetOrderCompanyDocumentsV1Responses[keyof ManagerOrderCompanyControllerGetOrderCompanyDocumentsV1Responses]

export type ManagerOrderCompanyControllerUpdateOrderCompanyDocumentsV1Data = {
  body: UpdateOrderCompanyDocumentsDto
  path?: never
  query?: never
  url: '/api/v1/manager/order-company/documents'
}

export type ManagerOrderCompanyControllerUpdateOrderCompanyDocumentsV1Responses = {
  201: GetOrderCompanyDocumentsResDto
}

export type ManagerOrderCompanyControllerUpdateOrderCompanyDocumentsV1Response =
  ManagerOrderCompanyControllerUpdateOrderCompanyDocumentsV1Responses[keyof ManagerOrderCompanyControllerUpdateOrderCompanyDocumentsV1Responses]

export type ManagerOrderCompanyControllerGetTabStatusesV1Data = {
  body?: never
  path?: never
  query?: never
  url: '/api/v1/manager/order-company/tab-statuses'
}

export type ManagerOrderCompanyControllerGetTabStatusesV1Responses = {
  200: GetOrderCompanyStatusesResDto
}

export type ManagerOrderCompanyControllerGetTabStatusesV1Response =
  ManagerOrderCompanyControllerGetTabStatusesV1Responses[keyof ManagerOrderCompanyControllerGetTabStatusesV1Responses]

export type JobCategoryControllerGetJobCategoriesV1Data = {
  body?: never
  path?: never
  query: {
    type: CategoryType
  }
  url: '/api/v1/job-category'
}

export type JobCategoryControllerGetJobCategoriesV1Responses = {
  200: JobCategoryResDto
}

export type JobCategoryControllerGetJobCategoriesV1Response =
  JobCategoryControllerGetJobCategoriesV1Responses[keyof JobCategoryControllerGetJobCategoriesV1Responses]

export type CommonControllerGetStaffsV1Data = {
  body?: never
  path?: never
  query?: never
  url: '/api/v1/common/dropdown/staffs'
}

export type CommonControllerGetStaffsV1Responses = {
  200: Array<StaffDropdownDto>
}

export type CommonControllerGetStaffsV1Response =
  CommonControllerGetStaffsV1Responses[keyof CommonControllerGetStaffsV1Responses]

export type ConstructionSiteControllerGetConstructionSitesV1Data = {
  body?: never
  path?: never
  query?: {
    /**
     * The name of the construction site
     */
    name?: string
    /**
     * The IDs of the staff
     */
    staffIds?: Array<string>
    /**
     * The date from
     */
    from?: string
    /**
     * The date to
     */
    to?: string
    /**
     * The province
     */
    province?: string
    statuses?: Array<'WAITING_FOR_WORKER' | 'OFFERING' | 'COMPLETED'>
    page?: number
    limit?: number
  }
  url: '/api/v1/job/construction-site'
}

export type ConstructionSiteControllerGetConstructionSitesV1Responses = {
  200: GetConstructionSitesResDto
}

export type ConstructionSiteControllerGetConstructionSitesV1Response =
  ConstructionSiteControllerGetConstructionSitesV1Responses[keyof ConstructionSiteControllerGetConstructionSitesV1Responses]

export type ConstructionSiteControllerGetConstructionSiteForDropdownV1Data = {
  body?: never
  path?: never
  query?: never
  url: '/api/v1/job/construction-site/dropdown'
}

export type ConstructionSiteControllerGetConstructionSiteForDropdownV1Responses = {
  200: Array<ConstructionSiteForDropdownDto>
}

export type ConstructionSiteControllerGetConstructionSiteForDropdownV1Response =
  ConstructionSiteControllerGetConstructionSiteForDropdownV1Responses[keyof ConstructionSiteControllerGetConstructionSiteForDropdownV1Responses]

export type ConstructionSiteControllerGetConstructionSiteV1Data = {
  body?: never
  path: {
    id: string
  }
  query?: never
  url: '/api/v1/job/construction-site/{id}'
}

export type ConstructionSiteControllerGetConstructionSiteV1Responses = {
  200: ConstructionSiteDto
}

export type ConstructionSiteControllerGetConstructionSiteV1Response =
  ConstructionSiteControllerGetConstructionSiteV1Responses[keyof ConstructionSiteControllerGetConstructionSiteV1Responses]

export type ConstructionSiteControllerGetJobsByConstructionSiteIdV1Data = {
  body?: never
  path: {
    id: string
  }
  query?: never
  url: '/api/v1/job/construction-site/{id}/jobs'
}

export type ConstructionSiteControllerGetJobsByConstructionSiteIdV1Responses = {
  200: Array<JobDetailListItem>
}

export type ConstructionSiteControllerGetJobsByConstructionSiteIdV1Response =
  ConstructionSiteControllerGetJobsByConstructionSiteIdV1Responses[keyof ConstructionSiteControllerGetJobsByConstructionSiteIdV1Responses]

export type ConstructionSiteControllerGetOfferJobsByConstructionSiteIdV1Data = {
  body?: never
  path: {
    id: string
  }
  query?: never
  url: '/api/v1/job/construction-site/{id}/offers'
}

export type ConstructionSiteControllerGetOfferJobsByConstructionSiteIdV1Responses = {
  200: Array<OfferDetailListItem>
}

export type ConstructionSiteControllerGetOfferJobsByConstructionSiteIdV1Response =
  ConstructionSiteControllerGetOfferJobsByConstructionSiteIdV1Responses[keyof ConstructionSiteControllerGetOfferJobsByConstructionSiteIdV1Responses]

export type JobControllerCreateJobV1Data = {
  body: CreateJobDto
  path?: never
  query?: never
  url: '/api/v1/jobs'
}

export type JobControllerCreateJobV1Responses = {
  201: JobDetailDto
}

export type JobControllerCreateJobV1Response =
  JobControllerCreateJobV1Responses[keyof JobControllerCreateJobV1Responses]

export type JobControllerDeleteJobV1Data = {
  body?: never
  path: {
    id: string
  }
  query?: never
  url: '/api/v1/jobs/{id}'
}

export type JobControllerDeleteJobV1Responses = {
  200: unknown
}

export type JobControllerGetJobDetailV1Data = {
  body?: never
  path: {
    id: string
  }
  query?: never
  url: '/api/v1/jobs/{id}'
}

export type JobControllerGetJobDetailV1Responses = {
  200: JobDetailDto
}

export type JobControllerGetJobDetailV1Response =
  JobControllerGetJobDetailV1Responses[keyof JobControllerGetJobDetailV1Responses]

export type JobControllerUpdateJobV1Data = {
  body: UpdateJobDto
  path: {
    id: string
  }
  query?: never
  url: '/api/v1/jobs/{id}'
}

export type JobControllerUpdateJobV1Responses = {
  200: unknown
}

export type JobControllerCheckOfferEligibilityV1Data = {
  body?: never
  path?: never
  query?: never
  url: '/api/v1/jobs/check-offer-eligibility'
}

export type JobControllerCheckOfferEligibilityV1Responses = {
  200: boolean
}

export type JobControllerCheckOfferEligibilityV1Response =
  JobControllerCheckOfferEligibilityV1Responses[keyof JobControllerCheckOfferEligibilityV1Responses]

export type JobControllerSearchWorkerV1Data = {
  body: SearchWorkerDto
  path?: never
  query?: never
  url: '/api/v1/jobs/search-worker'
}

export type JobControllerSearchWorkerV1Responses = {
  201: Array<SearchWorkerCombinationDto>
}

export type JobControllerSearchWorkerV1Response =
  JobControllerSearchWorkerV1Responses[keyof JobControllerSearchWorkerV1Responses]

export type JobControllerOfferV1Data = {
  body: StartChatDto
  path?: never
  query?: never
  url: '/api/v1/jobs/start-chat'
}

export type JobControllerOfferV1Responses = {
  201: OfferJobResponseDto
}

export type JobControllerOfferV1Response =
  JobControllerOfferV1Responses[keyof JobControllerOfferV1Responses]

export type StaffWorkerControllerGetWorkerDetailV1Data = {
  body?: never
  path: {
    id: string
  }
  query?: never
  url: '/api/v1/staff/worker/{id}'
}

export type StaffWorkerControllerGetWorkerDetailV1Responses = {
  200: WorkStyleDto
}

export type StaffWorkerControllerGetWorkerDetailV1Response =
  StaffWorkerControllerGetWorkerDetailV1Responses[keyof StaffWorkerControllerGetWorkerDetailV1Responses]

export type TalkRoomControllerGetTalkRoomsV1Data = {
  body?: never
  path?: never
  query?: {
    orderBy?: TalkRoomOrderBy
    constructionSiteId?: string
    keyword?: string
    cursor?: string
  }
  url: '/api/v1/talk-rooms'
}

export type TalkRoomControllerGetTalkRoomsV1Responses = {
  200: GetTalkRoomsResponseDto
}

export type TalkRoomControllerGetTalkRoomsV1Response =
  TalkRoomControllerGetTalkRoomsV1Responses[keyof TalkRoomControllerGetTalkRoomsV1Responses]

export type TalkRoomControllerGetCalendarV1Data = {
  body?: never
  path?: never
  query: {
    startDate: string
    endDate: string
  }
  url: '/api/v1/talk-rooms/calendar'
}

export type TalkRoomControllerGetCalendarV1Responses = {
  200: Array<GetCalendarResponseDto>
}

export type TalkRoomControllerGetCalendarV1Response =
  TalkRoomControllerGetCalendarV1Responses[keyof TalkRoomControllerGetCalendarV1Responses]

export type TalkRoomControllerGetTalkRoomBySiteIdV1Data = {
  body?: never
  path: {
    siteId: string
  }
  query?: never
  url: '/api/v1/talk-rooms/{siteId}/list-talk-rooms'
}

export type TalkRoomControllerGetTalkRoomBySiteIdV1Responses = {
  200: GetTalkRoomBySiteResponseDto
}

export type TalkRoomControllerGetTalkRoomBySiteIdV1Response =
  TalkRoomControllerGetTalkRoomBySiteIdV1Responses[keyof TalkRoomControllerGetTalkRoomBySiteIdV1Responses]

export type TalkRoomControllerGetTalkRoomConversationV1Data = {
  body?: never
  path: {
    id: string
  }
  query?: never
  url: '/api/v1/talk-rooms/{id}/conversation'
}

export type TalkRoomControllerGetTalkRoomConversationV1Responses = {
  200: TalkRoomConversationDto
}

export type TalkRoomControllerGetTalkRoomConversationV1Response =
  TalkRoomControllerGetTalkRoomConversationV1Responses[keyof TalkRoomControllerGetTalkRoomConversationV1Responses]

export type TalkRoomControllerGetMessagesV1Data = {
  body?: never
  path: {
    id: string
  }
  query: {
    cursorId?: string
    limit: number
  }
  url: '/api/v1/talk-rooms/{id}/messages'
}

export type TalkRoomControllerGetMessagesV1Responses = {
  200: GetOrderCompanyMessageRes
}

export type TalkRoomControllerGetMessagesV1Response =
  TalkRoomControllerGetMessagesV1Responses[keyof TalkRoomControllerGetMessagesV1Responses]

export type TalkRoomControllerSendMessageV1Data = {
  body: CreateMessageReq
  path: {
    id: string
  }
  query?: never
  url: '/api/v1/talk-rooms/{id}/messages'
}

export type TalkRoomControllerSendMessageV1Errors = {
  default: MessageDto
}

export type TalkRoomControllerSendMessageV1Error =
  TalkRoomControllerSendMessageV1Errors[keyof TalkRoomControllerSendMessageV1Errors]

export type TalkRoomControllerSendMessageV1Responses = {
  201: MessageDto
}

export type TalkRoomControllerSendMessageV1Response =
  TalkRoomControllerSendMessageV1Responses[keyof TalkRoomControllerSendMessageV1Responses]

export type TalkRoomControllerGetQoutationsV1Data = {
  body?: never
  path: {
    id: string
  }
  query?: never
  url: '/api/v1/talk-rooms/{id}/qoutations'
}

export type TalkRoomControllerGetQoutationsV1Responses = {
  200: GetTalkRoomQoutationResDto
}

export type TalkRoomControllerGetQoutationsV1Response =
  TalkRoomControllerGetQoutationsV1Responses[keyof TalkRoomControllerGetQoutationsV1Responses]

export type TalkRoomControllerGetPayslipHistoryV1Data = {
  body?: never
  path: {
    id: string
  }
  query?: never
  url: '/api/v1/talk-rooms/{id}/payslip-history'
}

export type TalkRoomControllerGetPayslipHistoryV1Responses = {
  200: Array<GetPayslipHistoryResDto>
}

export type TalkRoomControllerGetPayslipHistoryV1Response =
  TalkRoomControllerGetPayslipHistoryV1Responses[keyof TalkRoomControllerGetPayslipHistoryV1Responses]

export type TalkRoomControllerGetPayslipHistoryDetailV1Data = {
  body?: never
  path: {
    id: string
    payslipId: string
  }
  query?: never
  url: '/api/v1/talk-rooms/{id}/payslip-history/{payslipId}'
}

export type TalkRoomControllerGetPayslipHistoryDetailV1Responses = {
  200: PayslipInHistoryDto
}

export type TalkRoomControllerGetPayslipHistoryDetailV1Response =
  TalkRoomControllerGetPayslipHistoryDetailV1Responses[keyof TalkRoomControllerGetPayslipHistoryDetailV1Responses]

export type TalkRoomControllerSubmitQuotationV1Data = {
  body: SubmitQuotationDto
  path: {
    id: string
  }
  query?: never
  url: '/api/v1/talk-rooms/{id}/submit-quotation'
}

export type TalkRoomControllerSubmitQuotationV1Responses = {
  201: unknown
}

export type TalkRoomControllerAcceptQuotationV1Data = {
  body: AcceptQuotationDto
  path: {
    id: string
  }
  query?: never
  url: '/api/v1/talk-rooms/{id}/accept-quotation'
}

export type TalkRoomControllerAcceptQuotationV1Responses = {
  201: unknown
}

export type TalkRoomControllerRejectQuotationV1Data = {
  body: RejectQuotationDto
  path: {
    id: string
  }
  query?: never
  url: '/api/v1/talk-rooms/{id}/reject-quotation'
}

export type TalkRoomControllerRejectQuotationV1Responses = {
  201: unknown
}

export type TalkRoomControllerCancelQuotationBeforeWorkingV1Data = {
  body: CancelQuotationDto
  path: {
    id: string
  }
  query?: never
  url: '/api/v1/talk-rooms/{id}/cancel-quotation-before-working'
}

export type TalkRoomControllerCancelQuotationBeforeWorkingV1Responses = {
  201: unknown
}

export type TalkRoomControllerCancelQuotationAfterWorkingV1Data = {
  body: CancelQuotationDto
  path: {
    id: string
  }
  query?: never
  url: '/api/v1/talk-rooms/{id}/cancel-quotation-after-working'
}

export type TalkRoomControllerCancelQuotationAfterWorkingV1Responses = {
  201: unknown
}

export type TalkRoomControllerRemoveWorkDateV1Data = {
  body: RemoveWorkDateBodyDto
  path: {
    id: string
  }
  query?: never
  url: '/api/v1/talk-rooms/{id}/remove-work-date'
}

export type TalkRoomControllerRemoveWorkDateV1Responses = {
  201: unknown
}

export type TalkRoomControllerAddWorkDateV1Data = {
  body: AddWorkDateBodyDto
  path: {
    id: string
  }
  query?: never
  url: '/api/v1/talk-rooms/{id}/add-work-date'
}

export type TalkRoomControllerAddWorkDateV1Responses = {
  201: unknown
}

export type TalkRoomControllerReturnForCorrectionV1Data = {
  body: ReturnForCorrectionBodyDto
  path: {
    id: string
  }
  query?: never
  url: '/api/v1/talk-rooms/{id}/return-for-correction'
}

export type TalkRoomControllerReturnForCorrectionV1Responses = {
  201: unknown
}

export type TalkRoomControllerApprovePayslipV1Data = {
  body: ApprovePayslipBodyDto
  path: {
    id: string
  }
  query?: never
  url: '/api/v1/talk-rooms/{id}/approve-payslip'
}

export type TalkRoomControllerApprovePayslipV1Responses = {
  201: unknown
}

export type TalkRoomControllerCancelAddWorkDateRequestV1Data = {
  body: CancelAddWorkDateRequestBodyDto
  path: {
    id: string
  }
  query?: never
  url: '/api/v1/talk-rooms/{id}/cancel-add-work-date-request'
}

export type TalkRoomControllerCancelAddWorkDateRequestV1Responses = {
  201: unknown
}

export type TodoControllerGetTodosV1Data = {
  body?: never
  path?: never
  query?: {
    page?: number
    limit?: number
  }
  url: '/api/v1/todos'
}

export type TodoControllerGetTodosV1Responses = {
  200: TodoGetListResponseDto
}

export type TodoControllerGetTodosV1Response =
  TodoControllerGetTodosV1Responses[keyof TodoControllerGetTodosV1Responses]

export type TodoControllerCreateTodoV1Data = {
  body: TodoCreateDto
  path?: never
  query?: never
  url: '/api/v1/todos'
}

export type TodoControllerCreateTodoV1Responses = {
  201: unknown
}

export type TodoControllerDeleteTodoV1Data = {
  body?: never
  path: {
    id: string
  }
  query?: never
  url: '/api/v1/todos/{id}'
}

export type TodoControllerDeleteTodoV1Responses = {
  200: unknown
}

export type TodoControllerGetTodoDetailV1Data = {
  body?: never
  path: {
    id: string
  }
  query?: never
  url: '/api/v1/todos/{id}'
}

export type TodoControllerGetTodoDetailV1Responses = {
  200: TodoDto
}

export type TodoControllerGetTodoDetailV1Response =
  TodoControllerGetTodoDetailV1Responses[keyof TodoControllerGetTodoDetailV1Responses]

export type TodoControllerUpdateTodoV1Data = {
  body: UpdateTodoDto
  path: {
    id: string
  }
  query?: never
  url: '/api/v1/todos/{id}'
}

export type TodoControllerUpdateTodoV1Responses = {
  200: TodoDto
}

export type TodoControllerUpdateTodoV1Response =
  TodoControllerUpdateTodoV1Responses[keyof TodoControllerUpdateTodoV1Responses]

export type ReviewControllerGetReviewsOfTalkRoomV1Data = {
  body?: never
  path: {
    talkRoomId: string
  }
  query?: never
  url: '/api/v1/reviews/{talkRoomId}'
}

export type ReviewControllerGetReviewsOfTalkRoomV1Responses = {
  200: GetReviewsOfTalkRoomDto
}

export type ReviewControllerGetReviewsOfTalkRoomV1Response =
  ReviewControllerGetReviewsOfTalkRoomV1Responses[keyof ReviewControllerGetReviewsOfTalkRoomV1Responses]

export type ReviewControllerCreateReviewV1Data = {
  body: CreateReviewDto
  path: {
    talkRoomId: string
  }
  query?: never
  url: '/api/v1/reviews/{talkRoomId}'
}

export type ReviewControllerCreateReviewV1Responses = {
  201: unknown
}

export type ReviewControllerGetReviewsOfUserV1Data = {
  body?: never
  path: {
    id: string
  }
  query?: never
  url: '/api/v1/reviews/user/{id}'
}

export type ReviewControllerGetReviewsOfUserV1Responses = {
  200: GetReviewsOfUserResDto
}

export type ReviewControllerGetReviewsOfUserV1Response =
  ReviewControllerGetReviewsOfUserV1Responses[keyof ReviewControllerGetReviewsOfUserV1Responses]

export type ClientOptions = {
  baseURL: string
}
